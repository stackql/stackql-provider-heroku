openapi: 3.0.0
info:
  title: Heroku Platform API - Addons
  description: The platform API empowers developers to automate, extend and combine Heroku with other services.
  version: v0
servers:
- url: https://api.heroku.com
paths:
  /addons/{add_on_identity}/actions/provision:
    post:
      summary: Provision
      description: Mark an add-on as provisioned for use.
      operationId: add_on_actionProvision
      tags:
      - addons
      parameters:
      - name: add_on_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of add-on.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add-on'
      x-stackQL-resource: add-on-action
      x-stackQL-method: Provision
      x-stackQL-verb: update
  /addons/{add_on_identity}/actions/deprovision:
    post:
      summary: Deprovision
      description: Mark an add-on as deprovisioned.
      operationId: add_on_actionDeprovision
      tags:
      - addons
      parameters:
      - name: add_on_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of add-on.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add-on'
      x-stackQL-resource: add-on-action
      x-stackQL-method: Deprovision
      x-stackQL-verb: update
  /addon-attachments:
    post:
      summary: Create
      description: Create a new add-on attachment.
      operationId: add_on_attachmentCreate
      tags:
      - addons
      parameters: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add-on-attachment'
      x-stackQL-resource: add-on-attachment
      x-stackQL-method: Create
      x-stackQL-verb: insert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                addon:
                  $ref: '#/components/schemas/identity'
                app:
                  $ref: '#/components/schemas/identity'
                confirm:
                  $ref: '#/components/schemas/confirm'
                name:
                  $ref: '#/components/schemas/name'
                namespace:
                  $ref: '#/components/schemas/namespace'
              required:
              - addon
              - app
              type:
              - object
    get:
      summary: List
      description: List existing add-on attachments.
      operationId: add_on_attachmentList
      tags:
      - addons
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/add-on-attachment'
                type:
                - array
      x-stackQL-resource: add-on-attachment
      x-stackQL-method: List
      x-stackQL-verb: select
  /addon-attachments/{add_on_attachment_identity}:
    delete:
      summary: Delete
      description: Delete an existing add-on attachment.
      operationId: add_on_attachmentDelete
      tags:
      - addons
      parameters:
      - name: add_on_attachment_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of add-on-attachment.
      responses:
        '204':
          description: No Content
      x-stackQL-resource: add-on-attachment
      x-stackQL-method: Delete
      x-stackQL-verb: delete
    get:
      summary: Info
      description: Info for existing add-on attachment.
      operationId: add_on_attachmentInfo
      tags:
      - addons
      parameters:
      - name: add_on_attachment_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of add-on-attachment.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add-on-attachment'
      x-stackQL-resource: add-on-attachment
      x-stackQL-method: Info
      x-stackQL-verb: select
  /addons/{add_on_identity}/addon-attachments:
    get:
      summary: List by Add-on
      description: List existing add-on attachments for an add-on.
      operationId: add_on_attachmentListByAddOn
      tags:
      - addons
      parameters:
      - name: add_on_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of add-on.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/add-on-attachment'
                type:
                - array
      x-stackQL-resource: add-on-attachment
      x-stackQL-method: ListByAddOn
      x-stackQL-verb: select
  /apps/{app_identity}/addon-attachments:
    get:
      summary: List by App
      description: List existing add-on attachments for an app.
      operationId: add_on_attachmentListByApp
      tags:
      - addons
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/add-on-attachment'
                type:
                - array
      x-stackQL-resource: add-on-attachment
      x-stackQL-method: ListByApp
      x-stackQL-verb: select
  /apps/{app_identity}/addon-attachments/{add_on_attachment_scopedIdentity}:
    get:
      summary: Info by App
      description: Info for existing add-on attachment for an app.
      operationId: add_on_attachmentInfoByApp
      tags:
      - addons
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      - name: add_on_attachment_scopedIdentity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for scopedIdentity of add-on-attachment.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add-on-attachment'
      x-stackQL-resource: add-on-attachment
      x-stackQL-method: InfoByApp
      x-stackQL-verb: select
  /actions/addon-attachments/resolve:
    post:
      summary: Resolution
      description: Resolve an add-on attachment from a name, optionally passing an app name. If there are matches it returns
        at least one add-on attachment (exact match) or many.
      operationId: add_on_attachmentResolution
      tags:
      - addons
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/add-on-attachment'
                type:
                - array
      x-stackQL-resource: add-on-attachment
      x-stackQL-method: Resolution
      x-stackQL-verb: exec
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                addon_attachment:
                  $ref: '#/components/schemas/name'
                app:
                  $ref: '#/components/schemas/name'
                addon_service:
                  $ref: '#/components/schemas/name'
              required:
              - addon_attachment
              type:
              - object
  /addons/{add_on_identity}/config:
    get:
      summary: List
      description: Get an add-on's config. Accessible by customers with access and by the add-on partner providing this add-on.
      operationId: add_on_configList
      tags:
      - addons
      parameters:
      - name: add_on_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of add-on.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/add-on-config'
                type:
                - array
      x-stackQL-resource: add-on-config
      x-stackQL-method: List
      x-stackQL-verb: select
    patch:
      summary: Update
      description: Update an add-on's config. Can only be accessed by the add-on partner providing this add-on.
      operationId: add_on_configUpdate
      tags:
      - addons
      parameters:
      - name: add_on_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of add-on.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type:
                - array
                items:
                  $ref: '#/components/schemas/add-on-config'
      x-stackQL-resource: add-on-config
      x-stackQL-method: Update
      x-stackQL-verb: update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                config:
                  items:
                    $ref: '#/components/schemas/add-on-config'
                  type:
                  - array
              type:
              - object
  /addon-services/{add_on_service_identity}:
    get:
      summary: Info
      description: Info for existing add-on-service.
      operationId: add_on_serviceInfo
      tags:
      - addons
      parameters:
      - name: add_on_service_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of add-on-service.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add-on-service'
      x-stackQL-resource: add-on-service
      x-stackQL-method: Info
      x-stackQL-verb: select
  /addon-services:
    get:
      summary: List
      description: List existing add-on-services.
      operationId: add_on_serviceList
      tags:
      - addons
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/add-on-service'
                type:
                - array
      x-stackQL-resource: add-on-service
      x-stackQL-method: List
      x-stackQL-verb: select
  /addons:
    get:
      summary: List
      description: List all existing add-ons.
      operationId: add_onList
      tags:
      - addons
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/add-on'
                type:
                - array
      x-stackQL-resource: add-on
      x-stackQL-method: List
      x-stackQL-verb: select
  /addons/{add_on_identity}:
    get:
      summary: Info
      description: Info for an existing add-on.
      operationId: add_onInfo
      tags:
      - addons
      parameters:
      - name: add_on_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of add-on.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add-on'
      x-stackQL-resource: add-on
      x-stackQL-method: Info
      x-stackQL-verb: select
  /apps/{app_identity}/addons:
    post:
      summary: Create
      description: Create a new add-on.
      operationId: add_onCreate
      tags:
      - addons
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add-on'
      x-stackQL-resource: add-on
      x-stackQL-method: Create
      x-stackQL-verb: insert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                attachment:
                  description: name for add-on's initial attachment
                  example:
                    name: DATABASE_FOLLOWER
                  properties:
                    name:
                      $ref: '#/components/schemas/name'
                  type:
                  - object
                config:
                  $ref: '#/components/schemas/config'
                confirm:
                  $ref: '#/components/schemas/confirm'
                plan:
                  $ref: '#/components/schemas/identity'
                name:
                  $ref: '#/components/schemas/name'
              required:
              - plan
              type:
              - object
    get:
      summary: List By App
      description: List existing add-ons for an app.
      operationId: add_onListByApp
      tags:
      - addons
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/add-on'
                type:
                - array
      x-stackQL-resource: add-on
      x-stackQL-method: ListByApp
      x-stackQL-verb: select
  /apps/{app_identity}/addons/{add_on_identity}:
    delete:
      summary: Delete
      description: Delete an existing add-on.
      operationId: add_onDelete
      tags:
      - addons
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      - name: add_on_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of add-on.
      responses:
        '204':
          description: No Content
      x-stackQL-resource: add-on
      x-stackQL-method: Delete
      x-stackQL-verb: delete
    get:
      summary: Info By App
      description: Info for an existing add-on.
      operationId: add_onInfoByApp
      tags:
      - addons
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      - name: add_on_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of add-on.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add-on'
      x-stackQL-resource: add-on
      x-stackQL-method: InfoByApp
      x-stackQL-verb: select
    patch:
      summary: Update
      description: Change add-on plan. Some add-ons may not support changing plans. In that case, an error will be returned.
      operationId: add_onUpdate
      tags:
      - addons
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      - name: add_on_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of add-on.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add-on'
      x-stackQL-resource: add-on
      x-stackQL-method: Update
      x-stackQL-verb: update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  $ref: '#/components/schemas/name'
                plan:
                  $ref: '#/components/schemas/identity'
              required:
              - plan
              type:
              - object
  /users/{account_identity}/addons:
    get:
      summary: List By User
      description: List all existing add-ons a user has access to
      operationId: add_onListByUser
      tags:
      - addons
      parameters:
      - name: account_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of account.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/add-on'
                type:
                - array
      x-stackQL-resource: add-on
      x-stackQL-method: ListByUser
      x-stackQL-verb: select
  /teams/{team_identity}/addons:
    get:
      summary: List By Team
      description: List add-ons used across all Team apps
      operationId: add_onListByTeam
      tags:
      - addons
      parameters:
      - name: team_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of team.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/add-on'
                type:
                - array
      x-stackQL-resource: add-on
      x-stackQL-method: ListByTeam
      x-stackQL-verb: select
  /actions/addons/resolve:
    post:
      summary: Resolution
      description: Resolve an add-on from a name, optionally passing an app name. If there are matches it returns at least
        one add-on (exact match) or many.
      operationId: add_onResolution
      tags:
      - addons
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/add-on'
                type:
                - array
      x-stackQL-resource: add-on
      x-stackQL-method: Resolution
      x-stackQL-verb: exec
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                addon:
                  $ref: '#/components/schemas/name'
                app:
                  $ref: '#/components/schemas/name'
                addon_service:
                  $ref: '#/components/schemas/name'
              required:
              - addon
              type:
              - object
  /teams/{team_identity}/allowed-addon-services:
    get:
      summary: List By Team
      description: List all allowed add-on services for a team
      operationId: allowed_add_on_serviceListByTeam
      tags:
      - addons
      parameters:
      - name: team_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of team.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/allowed-add-on-service'
                type:
                - array
      x-stackQL-resource: allowed-add-on-service
      x-stackQL-method: ListByTeam
      x-stackQL-verb: select
    post:
      summary: Create By Team
      description: Allow an Add-on Service
      operationId: allowed_add_on_serviceCreateByTeam
      tags:
      - addons
      parameters:
      - name: team_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of team.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/allowed-add-on-service'
                type:
                - array
      x-stackQL-resource: allowed-add-on-service
      x-stackQL-method: CreateByTeam
      x-stackQL-verb: insert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type:
              - object
              properties:
                addon_service:
                  description: name of the add-on service to allow
                  example: heroku-postgresql
                  type:
                  - string
  /teams/{team_identity}/allowed-addon-services/{allowed_add_on_service_identity}:
    delete:
      summary: Delete By Team
      description: Remove an allowed add-on service
      operationId: allowed_add_on_serviceDeleteByTeam
      tags:
      - addons
      parameters:
      - name: team_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of team.
      - name: allowed_add_on_service_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of allowed-add-on-service.
      responses:
        '204':
          description: No Content
      x-stackQL-resource: allowed-add-on-service
      x-stackQL-method: DeleteByTeam
      x-stackQL-verb: delete
  /plans/{plan_identity}:
    get:
      summary: Info
      description: Info for existing plan.
      operationId: planInfo
      tags:
      - addons
      parameters:
      - name: plan_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of plan.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/plan'
      x-stackQL-resource: plan
      x-stackQL-method: Info
      x-stackQL-verb: select
  /addon-services/{add_on_service_identity}/plans/{plan_identity}:
    get:
      summary: Info By Add-on
      description: Info for existing plan by Add-on.
      operationId: planInfoByAddOn
      tags:
      - addons
      parameters:
      - name: add_on_service_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of add-on-service.
      - name: plan_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of plan.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/plan'
      x-stackQL-resource: plan
      x-stackQL-method: InfoByAddOn
      x-stackQL-verb: select
  /addon-services/{add_on_service_identity}/plans:
    get:
      summary: List By Add-on
      description: List existing plans by Add-on.
      operationId: planListByAddOn
      tags:
      - addons
      parameters:
      - name: add_on_service_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of add-on-service.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/plan'
                type:
                - array
      x-stackQL-resource: plan
      x-stackQL-method: ListByAddOn
      x-stackQL-verb: select
components:
  schemas:
    add-on:
      description: Add-ons represent add-ons that have been provisioned and attached to one or more apps.
      additionalProperties: false
      required:
      - actions
      - addon_service
      - billing_entity
      - app
      - billed_price
      - config_vars
      - created_at
      - id
      - name
      - plan
      - provider_id
      - state
      - updated_at
      - web_url
      type:
      - object
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        addon_service:
          $ref: '#/components/schemas/addon_service'
        billing_entity:
          description: billing entity associated with this add-on
          type:
          - object
          properties:
            id:
              description: unique identifier of the billing entity
              format: uuid
              readOnly: true
              type:
              - string
            name:
              description: name of the billing entity
              readOnly: true
              type:
              - string
            type:
              description: type of Object of the billing entity; new types allowed at any time.
              enum:
              - app
              - team
              readOnly: true
              type:
              - string
        app:
          description: billing application associated with this add-on
          type:
          - object
          properties:
            id:
              $ref: '#/components/schemas/id'
            name:
              $ref: '#/components/schemas/name'
        billed_price:
          description: billed price
          properties:
            cents:
              $ref: '#/components/schemas/cents'
            contract:
              $ref: '#/components/schemas/contract'
            unit:
              $ref: '#/components/schemas/unit'
          type:
          - object
          - 'null'
        config_vars:
          $ref: '#/components/schemas/config_vars'
        created_at:
          $ref: '#/components/schemas/created_at'
        id:
          $ref: '#/components/schemas/id'
        name:
          $ref: '#/components/schemas/name'
        plan:
          $ref: '#/components/schemas/plan'
        provider_id:
          $ref: '#/components/schemas/provider_id'
        provision_message:
          $ref: '#/components/schemas/provision_message'
        state:
          $ref: '#/components/schemas/state'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        web_url:
          $ref: '#/components/schemas/web_url'
    add-on-attachment:
      description: An add-on attachment represents a connection between an app and an add-on that it has been given access
        to.
      type:
      - object
      properties:
        addon:
          description: identity of add-on
          properties:
            id:
              $ref: '#/components/schemas/id'
            name:
              $ref: '#/components/schemas/name'
            app:
              description: billing application associated with this add-on
              type:
              - object
              properties:
                id:
                  $ref: '#/components/schemas/id'
                name:
                  $ref: '#/components/schemas/name'
          additionalProperties: false
          required:
          - id
          - name
          - app
          type:
          - object
        app:
          description: application that is attached to add-on
          properties:
            id:
              $ref: '#/components/schemas/id'
            name:
              $ref: '#/components/schemas/name'
          type:
          - object
        created_at:
          $ref: '#/components/schemas/created_at'
        id:
          $ref: '#/components/schemas/id'
        name:
          $ref: '#/components/schemas/name'
        namespace:
          $ref: '#/components/schemas/namespace'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        web_url:
          $ref: '#/components/schemas/web_url'
        log_input_url:
          $ref: '#/components/schemas/log_input_url'
    id:
      description: unique identifier of add-on
      format: uuid
      readOnly: true
      type:
      - string
    name:
      description: globally unique name of the add-on
      pattern: ^[a-zA-Z][A-Za-z0-9_-]+$
      type:
      - string
    created_at:
      description: when add-on attachment was created
      format: date-time
      readOnly: true
      type:
      - string
    namespace:
      description: attachment namespace
      readOnly: true
      type:
      - 'null'
      - string
    updated_at:
      description: when add-on attachment was updated
      format: date-time
      readOnly: true
      type:
      - string
    web_url:
      description: URL for logging into web interface of add-on in attached app context
      format: uri
      readOnly: true
      type:
      - 'null'
      - string
    log_input_url:
      description: URL for add-on partners to write to an add-on's logs
      type:
      - 'null'
      - string
      readOnly: true
    identity:
      anyOf:
      - $ref: '#/components/schemas/id'
      - $ref: '#/components/schemas/name'
    confirm:
      description: name of owning app for confirmation
      type:
      - string
    add-on-config:
      description: Configuration of an Add-on
      type:
      - object
      properties:
        name:
          $ref: '#/components/schemas/name'
        value:
          $ref: '#/components/schemas/value'
    value:
      description: value of the config
      type:
      - string
      - 'null'
    add-on-service:
      description: Add-on services represent add-ons that may be provisioned for apps. Endpoints under add-on services can
        be accessed without authentication.
      type:
      - object
      properties:
        cli_plugin_name:
          $ref: '#/components/schemas/cli_plugin_name'
        created_at:
          $ref: '#/components/schemas/created_at'
        human_name:
          $ref: '#/components/schemas/human_name'
        id:
          $ref: '#/components/schemas/id'
        name:
          $ref: '#/components/schemas/name'
        state:
          $ref: '#/components/schemas/state'
        supports_multiple_installations:
          $ref: '#/components/schemas/supports_multiple_installations'
        supports_sharing:
          $ref: '#/components/schemas/supports_sharing'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        supported_generations:
          $ref: '#/components/schemas/supported_generations'
    config:
      additionalProperties: false
      description: custom add-on provisioning options
      patternProperties:
        ^\w+$:
          type:
          - string
      type:
      - object
    allowed-add-on-service:
      description: Entities that have been allowed to be used by a Team
      type:
      - object
      properties:
        added_at:
          $ref: '#/components/schemas/added_at'
        added_by:
          $ref: '#/components/schemas/added_by'
        addon_service:
          $ref: '#/components/schemas/addon_service'
        id:
          $ref: '#/components/schemas/id'
    added_at:
      description: when the add-on service was allowed
      format: date-time
      readOnly: true
      type:
      - string
    added_by:
      description: the user which allowed the add-on service
      properties:
        email:
          $ref: '#/components/schemas/email'
          type:
          - string
          - 'null'
        id:
          $ref: '#/components/schemas/id'
          type:
          - string
          - 'null'
      readOnly: true
      type:
      - object
    email:
      description: unique email address of account
      format: email
      readOnly: false
      type:
      - string
    addon_service:
      description: the add-on service allowed for use
      properties:
        id:
          $ref: '#/components/schemas/id'
        name:
          $ref: '#/components/schemas/name'
        human_name:
          $ref: '#/components/schemas/human_name'
      readOnly: true
      type:
      - object
    human_name:
      description: human-readable name of the add-on service provider
      readOnly: true
      type:
      - string
    plan:
      description: Plans represent different configurations of add-ons that may be added to apps. Endpoints under add-on services
        can be accessed without authentication.
      type:
      - object
      properties:
        addon_service:
          description: identity of add-on service
          properties:
            id:
              $ref: '#/components/schemas/id'
            name:
              $ref: '#/components/schemas/name'
          type:
          - object
        created_at:
          $ref: '#/components/schemas/created_at'
        compliance:
          $ref: '#/components/schemas/compliance'
        default:
          $ref: '#/components/schemas/default'
        description:
          $ref: '#/components/schemas/description'
        human_name:
          $ref: '#/components/schemas/human_name'
        id:
          $ref: '#/components/schemas/id'
        installable_inside_private_network:
          $ref: '#/components/schemas/installable_inside_private_network'
        installable_outside_private_network:
          $ref: '#/components/schemas/installable_outside_private_network'
        name:
          $ref: '#/components/schemas/name'
        price:
          description: price
          properties:
            cents:
              $ref: '#/components/schemas/cents'
            contract:
              $ref: '#/components/schemas/contract'
            unit:
              $ref: '#/components/schemas/unit'
          type:
          - object
        space_default:
          $ref: '#/components/schemas/space_default'
        state:
          $ref: '#/components/schemas/state'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        visible:
          $ref: '#/components/schemas/visible'
    compliance:
      description: the compliance regimes applied to an add-on plan
      readOnly: false
      type:
      - 'null'
      - array
      items:
        $ref: '#/components/schemas/regime'
    regime:
      description: compliance requirements an add-on plan must adhere to
      readOnly: true
      type:
      - string
      enum:
      - HIPAA
      - PCI
    default:
      description: whether this plan is the default for its add-on service
      readOnly: true
      type:
      - boolean
    description:
      description: description of plan
      readOnly: true
      type:
      - string
    installable_inside_private_network:
      description: whether this plan is installable to a Private Spaces app
      readOnly: true
      type:
      - boolean
    installable_outside_private_network:
      description: whether this plan is installable to a Common Runtime app
      readOnly: true
      type:
      - boolean
    cents:
      description: price in cents per unit of plan
      readOnly: true
      type:
      - integer
    contract:
      description: price is negotiated in a contract outside of monthly add-on billing
      readOnly: true
      type:
      - boolean
    unit:
      description: unit of price for plan
      readOnly: true
      type:
      - string
    space_default:
      description: whether this plan is the default for apps in Private Spaces
      readOnly: true
      type:
      - boolean
    state:
      description: release status for plan
      readOnly: true
      type:
      - string
    visible:
      description: whether this plan is publicly visible
      readOnly: true
      type:
      - boolean
  securitySchemes:
    herokuAuth:
      type: http
      scheme: bearer
      bearerFormat: API Key
  x-stackQL-resources:
    add-on-action:
      id: heroku.addons.add-on-action
      name: add-on-action
      title: Add On Action
      methods:
        Provision:
          operation:
            $ref: '#/paths/~1addons~1{add_on_identity}~1actions~1provision/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Deprovision:
          operation:
            $ref: '#/paths/~1addons~1{add_on_identity}~1actions~1deprovision/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update:
        - $ref: '#/components/x-stackQL-resources/add-on-action/methods/Provision'
        - $ref: '#/components/x-stackQL-resources/add-on-action/methods/Deprovision'
        delete: []
        exec: []
    add-on-attachment:
      id: heroku.addons.add-on-attachment
      name: add-on-attachment
      title: Add On Attachment
      methods:
        Create:
          operation:
            $ref: '#/paths/~1addon-attachments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        List:
          operation:
            $ref: '#/paths/~1addon-attachments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Delete:
          operation:
            $ref: '#/paths/~1addon-attachments~1{add_on_attachment_identity}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Info:
          operation:
            $ref: '#/paths/~1addon-attachments~1{add_on_attachment_identity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ListByAddOn:
          operation:
            $ref: '#/paths/~1addons~1{add_on_identity}~1addon-attachments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ListByApp:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1addon-attachments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        InfoByApp:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1addon-attachments~1{add_on_attachment_scopedIdentity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Resolution:
          operation:
            $ref: '#/paths/~1actions~1addon-attachments~1resolve/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/add-on-attachment/methods/List'
        - $ref: '#/components/x-stackQL-resources/add-on-attachment/methods/Info'
        - $ref: '#/components/x-stackQL-resources/add-on-attachment/methods/ListByAddOn'
        - $ref: '#/components/x-stackQL-resources/add-on-attachment/methods/ListByApp'
        - $ref: '#/components/x-stackQL-resources/add-on-attachment/methods/InfoByApp'
        insert:
        - $ref: '#/components/x-stackQL-resources/add-on-attachment/methods/Create'
        update: []
        delete:
        - $ref: '#/components/x-stackQL-resources/add-on-attachment/methods/Delete'
        exec:
        - $ref: '#/components/x-stackQL-resources/add-on-attachment/methods/Resolution'
    add-on-config:
      id: heroku.addons.add-on-config
      name: add-on-config
      title: Add On Config
      methods:
        List:
          operation:
            $ref: '#/paths/~1addons~1{add_on_identity}~1config/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Update:
          operation:
            $ref: '#/paths/~1addons~1{add_on_identity}~1config/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/add-on-config/methods/List'
        insert: []
        update:
        - $ref: '#/components/x-stackQL-resources/add-on-config/methods/Update'
        delete: []
        exec: []
    add-on-service:
      id: heroku.addons.add-on-service
      name: add-on-service
      title: Add On Service
      methods:
        Info:
          operation:
            $ref: '#/paths/~1addon-services~1{add_on_service_identity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        List:
          operation:
            $ref: '#/paths/~1addon-services/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/add-on-service/methods/Info'
        - $ref: '#/components/x-stackQL-resources/add-on-service/methods/List'
        insert: []
        update: []
        delete: []
        exec: []
    add-on:
      id: heroku.addons.add-on
      name: add-on
      title: Add On
      methods:
        List:
          operation:
            $ref: '#/paths/~1addons/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Info:
          operation:
            $ref: '#/paths/~1addons~1{add_on_identity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Create:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1addons/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ListByApp:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1addons/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Delete:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1addons~1{add_on_identity}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        InfoByApp:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1addons~1{add_on_identity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Update:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1addons~1{add_on_identity}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ListByUser:
          operation:
            $ref: '#/paths/~1users~1{account_identity}~1addons/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ListByTeam:
          operation:
            $ref: '#/paths/~1teams~1{team_identity}~1addons/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Resolution:
          operation:
            $ref: '#/paths/~1actions~1addons~1resolve/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/add-on/methods/List'
        - $ref: '#/components/x-stackQL-resources/add-on/methods/Info'
        - $ref: '#/components/x-stackQL-resources/add-on/methods/ListByApp'
        - $ref: '#/components/x-stackQL-resources/add-on/methods/InfoByApp'
        - $ref: '#/components/x-stackQL-resources/add-on/methods/ListByUser'
        - $ref: '#/components/x-stackQL-resources/add-on/methods/ListByTeam'
        insert:
        - $ref: '#/components/x-stackQL-resources/add-on/methods/Create'
        update:
        - $ref: '#/components/x-stackQL-resources/add-on/methods/Update'
        delete:
        - $ref: '#/components/x-stackQL-resources/add-on/methods/Delete'
        exec:
        - $ref: '#/components/x-stackQL-resources/add-on/methods/Resolution'
    allowed-add-on-service:
      id: heroku.addons.allowed-add-on-service
      name: allowed-add-on-service
      title: Allowed Add On Service
      methods:
        ListByTeam:
          operation:
            $ref: '#/paths/~1teams~1{team_identity}~1allowed-addon-services/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        CreateByTeam:
          operation:
            $ref: '#/paths/~1teams~1{team_identity}~1allowed-addon-services/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        DeleteByTeam:
          operation:
            $ref: '#/paths/~1teams~1{team_identity}~1allowed-addon-services~1{allowed_add_on_service_identity}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/allowed-add-on-service/methods/ListByTeam'
        insert:
        - $ref: '#/components/x-stackQL-resources/allowed-add-on-service/methods/CreateByTeam'
        update: []
        delete:
        - $ref: '#/components/x-stackQL-resources/allowed-add-on-service/methods/DeleteByTeam'
        exec: []
    plan:
      id: heroku.addons.plan
      name: plan
      title: Plan
      methods:
        Info:
          operation:
            $ref: '#/paths/~1plans~1{plan_identity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        InfoByAddOn:
          operation:
            $ref: '#/paths/~1addon-services~1{add_on_service_identity}~1plans~1{plan_identity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ListByAddOn:
          operation:
            $ref: '#/paths/~1addon-services~1{add_on_service_identity}~1plans/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/plan/methods/Info'
        - $ref: '#/components/x-stackQL-resources/plan/methods/InfoByAddOn'
        - $ref: '#/components/x-stackQL-resources/plan/methods/ListByAddOn'
        insert: []
        update: []
        delete: []
        exec: []
security:
- herokuAuth: []
