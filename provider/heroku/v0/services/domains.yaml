openapi: 3.0.0
info:
  title: Heroku Platform API - Domains
  description: The platform API empowers developers to automate, extend and combine Heroku with other services.
  version: v0
servers:
- url: https://api.heroku.com
paths:
  /apps/{app_identity}/domains:
    post:
      summary: Create
      description: Create a new domain.
      operationId: domainCreate
      tags:
      - domains
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain'
      x-stackQL-resource: domain
      x-stackQL-method: Create
      x-stackQL-verb: insert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                hostname:
                  $ref: '#/components/schemas/hostname'
                sni_endpoint:
                  $ref: '#/components/schemas/sni_endpoint'
              required:
              - hostname
              - sni_endpoint
              type:
              - object
    get:
      summary: List
      description: List existing domains.
      operationId: domainList
      tags:
      - domains
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/domain'
                type:
                - array
      x-stackQL-resource: domain
      x-stackQL-method: List
      x-stackQL-verb: select
  /apps/{app_identity}/domains/{domain_identity}:
    patch:
      summary: Update
      description: Associate an SNI endpoint
      operationId: domainUpdate
      tags:
      - domains
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      - name: domain_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of domain.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain'
      x-stackQL-resource: domain
      x-stackQL-method: Update
      x-stackQL-verb: update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                sni_endpoint:
                  $ref: '#/components/schemas/sni_endpoint'
              required:
              - sni_endpoint
              type:
              - object
    delete:
      summary: Delete
      description: Delete an existing domain
      operationId: domainDelete
      tags:
      - domains
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      - name: domain_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of domain.
      responses:
        '204':
          description: No Content
      x-stackQL-resource: domain
      x-stackQL-method: Delete
      x-stackQL-verb: delete
    get:
      summary: Info
      description: Info for existing domain.
      operationId: domainInfo
      tags:
      - domains
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      - name: domain_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of domain.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain'
      x-stackQL-resource: domain
      x-stackQL-method: Info
      x-stackQL-verb: select
  /apps/{app_identity}/sni-endpoints:
    post:
      summary: Create
      description: Create a new SNI endpoint.
      operationId: sni_endpointCreate
      tags:
      - domains
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sni-endpoint'
      x-stackQL-resource: sni-endpoint
      x-stackQL-method: Create
      x-stackQL-verb: insert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                certificate_chain:
                  $ref: '#/components/schemas/certificate_chain'
                private_key:
                  $ref: '#/components/schemas/private_key'
              required:
              - certificate_chain
              - private_key
              type:
              - object
    get:
      summary: List
      description: List existing SNI endpoints.
      operationId: sni_endpointList
      tags:
      - domains
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/sni-endpoint'
                type:
                - array
      x-stackQL-resource: sni-endpoint
      x-stackQL-method: List
      x-stackQL-verb: select
  /apps/{app_identity}/sni-endpoints/{sni_endpoint_identity}:
    delete:
      summary: Delete
      description: Delete existing SNI endpoint.
      operationId: sni_endpointDelete
      tags:
      - domains
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      - name: sni_endpoint_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of sni-endpoint.
      responses:
        '204':
          description: No Content
      x-stackQL-resource: sni-endpoint
      x-stackQL-method: Delete
      x-stackQL-verb: delete
    get:
      summary: Info
      description: Info for existing SNI endpoint.
      operationId: sni_endpointInfo
      tags:
      - domains
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      - name: sni_endpoint_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of sni-endpoint.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sni-endpoint'
      x-stackQL-resource: sni-endpoint
      x-stackQL-method: Info
      x-stackQL-verb: select
    patch:
      summary: Update
      description: Update an existing SNI endpoint.
      operationId: sni_endpointUpdate
      tags:
      - domains
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      - name: sni_endpoint_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of sni-endpoint.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sni-endpoint'
      x-stackQL-resource: sni-endpoint
      x-stackQL-method: Update
      x-stackQL-verb: update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                certificate_chain:
                  $ref: '#/components/schemas/certificate_chain'
                private_key:
                  $ref: '#/components/schemas/private_key'
              required:
              - certificate_chain
              - private_key
              type:
              - object
components:
  schemas:
    domain:
      description: Domains define what web routes should be routed to an app on Heroku.
      type:
      - object
      properties:
        acm_status:
          $ref: '#/components/schemas/acm_status'
        acm_status_reason:
          $ref: '#/components/schemas/acm_status_reason'
        app:
          description: app that owns the domain
          properties:
            name:
              $ref: '#/components/schemas/name'
            id:
              $ref: '#/components/schemas/id'
          type:
          - object
        cname:
          $ref: '#/components/schemas/cname'
        created_at:
          $ref: '#/components/schemas/created_at'
        hostname:
          $ref: '#/components/schemas/hostname'
        id:
          $ref: '#/components/schemas/id'
        kind:
          $ref: '#/components/schemas/kind'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        status:
          $ref: '#/components/schemas/status'
        sni_endpoint:
          description: sni endpoint the domain is associated with
          properties:
            name:
              $ref: '#/components/schemas/name'
            id:
              $ref: '#/components/schemas/id'
          type:
          - 'null'
          - object
    acm_status:
      description: status of this record's ACM
      readOnly: true
      type:
      - 'null'
      - string
    acm_status_reason:
      description: reason for the status of this record's ACM
      readOnly: true
      type:
      - 'null'
      - string
    name:
      description: unique name of app
      pattern: ^[a-z][a-z0-9-]{1,28}[a-z0-9]$
      readOnly: false
      type:
      - string
    id:
      description: unique identifier of app
      format: uuid
      readOnly: true
      type:
      - string
    cname:
      description: canonical name record, the address to point a domain at
      readOnly: true
      type:
      - 'null'
      - string
    created_at:
      description: when domain was created
      format: date-time
      readOnly: true
      type:
      - string
    hostname:
      description: full hostname
      format: uri
      readOnly: true
      type:
      - string
    kind:
      description: type of domain name
      enum:
      - heroku
      - custom
      readOnly: true
      type:
      - string
    updated_at:
      description: when domain was updated
      format: date-time
      readOnly: true
      type:
      - string
    status:
      description: status of this record's cname
      readOnly: true
      type:
      - string
    sni_endpoint:
      description: null or unique identifier or name for SNI endpoint
      type:
      - 'null'
      - string
    sni-endpoint:
      description: SNI Endpoint is a public address serving a custom SSL cert for HTTPS traffic, using the SNI TLS extension,
        to a Heroku app.
      type:
      - object
      properties:
        certificate_chain:
          $ref: '#/components/schemas/certificate_chain'
        created_at:
          $ref: '#/components/schemas/created_at'
        id:
          $ref: '#/components/schemas/id'
        name:
          $ref: '#/components/schemas/name'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        display_name:
          $ref: '#/components/schemas/display_name'
        domains:
          $ref: '#/components/schemas/domains'
        app:
          description: application that this SSL certificate is on
          properties:
            id:
              $ref: '#/components/schemas/id'
            name:
              $ref: '#/components/schemas/name'
          type:
          - object
        ssl_cert:
          description: certificate provided by this endpoint
          type:
          - object
          properties:
            ca_signed?:
              $ref: '#/components/schemas/ca_signed?'
            cert_domains:
              $ref: '#/components/schemas/cert_domains'
            expires_at:
              $ref: '#/components/schemas/expires_at'
            issuer:
              $ref: '#/components/schemas/issuer'
            self_signed?:
              $ref: '#/components/schemas/self_signed?'
            starts_at:
              $ref: '#/components/schemas/starts_at'
            subject:
              $ref: '#/components/schemas/subject'
            id:
              description: unique identifier of this SSL certificate
              format: uuid
              readOnly: true
              type:
              - string
    certificate_chain:
      description: 'raw contents of the public certificate chain (eg: .crt or .pem file)'
      readOnly: false
      type:
      - string
    display_name:
      description: unique name for SSL certificate
      pattern: ^[a-z][a-z0-9-]{2,29}$
      readOnly: false
      type:
      - string
      - 'null'
    domains:
      description: domains associated with this SSL certificate
      type:
      - array
      readOnly: true
      items:
        $ref: '#/components/schemas/id'
    ca_signed?:
      readOnly: true
      type:
      - boolean
    cert_domains:
      readOnly: true
      type:
      - array
    expires_at:
      readOnly: true
      format: date-time
      type:
      - string
    issuer:
      readOnly: true
      type:
      - string
    self_signed?:
      readOnly: true
      type:
      - boolean
    starts_at:
      readOnly: true
      format: date-time
      type:
      - string
    subject:
      readOnly: true
      type:
      - string
    private_key:
      description: contents of the private key (eg .key file)
      readOnly: false
      type:
      - string
  securitySchemes:
    herokuAuth:
      type: http
      scheme: bearer
      bearerFormat: API Key
  x-stackQL-resources:
    domain:
      id: heroku.domains.domain
      name: domain
      title: Domain
      methods:
        Create:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1domains/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        List:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1domains/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Update:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1domains~1{domain_identity}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Delete:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1domains~1{domain_identity}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Info:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1domains~1{domain_identity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/domain/methods/List'
        - $ref: '#/components/x-stackQL-resources/domain/methods/Info'
        insert:
        - $ref: '#/components/x-stackQL-resources/domain/methods/Create'
        update:
        - $ref: '#/components/x-stackQL-resources/domain/methods/Update'
        delete:
        - $ref: '#/components/x-stackQL-resources/domain/methods/Delete'
        exec: []
    sni-endpoint:
      id: heroku.domains.sni-endpoint
      name: sni-endpoint
      title: Sni Endpoint
      methods:
        Create:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1sni-endpoints/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        List:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1sni-endpoints/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Delete:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1sni-endpoints~1{sni_endpoint_identity}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Info:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1sni-endpoints~1{sni_endpoint_identity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Update:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1sni-endpoints~1{sni_endpoint_identity}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/sni-endpoint/methods/List'
        - $ref: '#/components/x-stackQL-resources/sni-endpoint/methods/Info'
        insert:
        - $ref: '#/components/x-stackQL-resources/sni-endpoint/methods/Create'
        update:
        - $ref: '#/components/x-stackQL-resources/sni-endpoint/methods/Update'
        delete:
        - $ref: '#/components/x-stackQL-resources/sni-endpoint/methods/Delete'
        exec: []
security:
- herokuAuth: []
