openapi: 3.0.0
info:
  title: Heroku Platform API - Misc
  description: The platform API empowers developers to automate, extend and combine Heroku with other services.
  version: v0
servers:
- url: https://api.heroku.com
paths:
  /account/delinquency:
    get:
      summary: Info
      description: Account delinquency information.
      operationId: account_delinquencyInfo
      tags:
      - misc
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account-delinquency'
      x-stackQL-resource: account-delinquency
      x-stackQL-method: Info
      x-stackQL-verb: select
  /addon-region-capabilities:
    get:
      summary: List
      description: List all existing add-on region capabilities.
      operationId: add_on_region_capabilityList
      tags:
      - misc
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/add-on-region-capability'
                type:
                - array
      x-stackQL-resource: add-on-region-capability
      x-stackQL-method: List
      x-stackQL-verb: select
  /addon-services/{add_on_service_identity}/region-capabilities:
    get:
      summary: List by Add-on Service
      description: List existing add-on region capabilities for an add-on-service
      operationId: add_on_region_capabilityListByAddOnService
      tags:
      - misc
      parameters:
      - name: add_on_service_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of add-on-service.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/add-on-region-capability'
                type:
                - array
      x-stackQL-resource: add-on-region-capability
      x-stackQL-method: ListByAddOnService
      x-stackQL-verb: select
  /regions/{region_identity}/addon-region-capabilities:
    get:
      summary: List By Region
      description: List existing add-on region capabilities for a region.
      operationId: add_on_region_capabilityListByRegion
      tags:
      - misc
      parameters:
      - name: region_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of region.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/add-on-region-capability'
                type:
                - array
      x-stackQL-resource: add-on-region-capability
      x-stackQL-method: ListByRegion
      x-stackQL-verb: select
  /addons/{add_on_identity}/webhook-deliveries/{app_webhook_delivery_identity}:
    get:
      summary: Info
      description: Returns the info for an existing delivery.  Can only be accessed by the add-on partner providing this add-on.
      operationId: add_on_webhook_deliveryInfo
      tags:
      - misc
      parameters:
      - name: add_on_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of add-on.
      - name: app_webhook_delivery_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app-webhook-delivery.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app-webhook-delivery'
      x-stackQL-resource: add-on-webhook-delivery
      x-stackQL-method: Info
      x-stackQL-verb: select
  /addons/{add_on_identity}/webhook-deliveries:
    get:
      summary: List
      description: Lists existing deliveries for an add-on.  Can only be accessed by the add-on partner providing this add-on.
      operationId: add_on_webhook_deliveryList
      tags:
      - misc
      parameters:
      - name: add_on_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of add-on.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/app-webhook-delivery'
                type:
                - array
      x-stackQL-resource: add-on-webhook-delivery
      x-stackQL-method: List
      x-stackQL-verb: select
  /addons/{add_on_identity}/webhook-events/{app_webhook_event_identity}:
    get:
      summary: Info
      description: Returns the info for a specified webhook event.  Can only be accessed by the add-on partner providing this
        add-on.
      operationId: add_on_webhook_eventInfo
      tags:
      - misc
      parameters:
      - name: add_on_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of add-on.
      - name: app_webhook_event_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app-webhook-event.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app-webhook-event'
      x-stackQL-resource: add-on-webhook-event
      x-stackQL-method: Info
      x-stackQL-verb: select
  /addons/{add_on_identity}/webhook-events:
    get:
      summary: List
      description: Lists existing webhook events for an add-on.  Can only be accessed by the add-on partner providing this
        add-on.
      operationId: add_on_webhook_eventList
      tags:
      - misc
      parameters:
      - name: add_on_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of add-on.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/app-webhook-event'
                type:
                - array
      x-stackQL-resource: add-on-webhook-event
      x-stackQL-method: List
      x-stackQL-verb: select
  /addons/{add_on_identity}/webhooks:
    post:
      summary: Create
      description: Create an add-on webhook subscription.  Can only be accessed by the add-on partner providing this add-on.
      operationId: add_on_webhookCreate
      tags:
      - misc
      parameters:
      - name: add_on_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of add-on.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addon_webhook'
      x-stackQL-resource: add-on-webhook
      x-stackQL-method: Create
      x-stackQL-verb: insert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                authorization:
                  $ref: '#/components/schemas/authorization'
                include:
                  $ref: '#/components/schemas/include'
                level:
                  $ref: '#/components/schemas/level'
                secret:
                  $ref: '#/components/schemas/secret'
                url:
                  $ref: '#/components/schemas/url'
              additionalProperties: false
              required:
              - include
              - level
              - url
              type:
              - object
    get:
      summary: List
      description: List all webhook subscriptions for a particular add-on.  Can only be accessed by the add-on partner providing
        this add-on.
      operationId: add_on_webhookList
      tags:
      - misc
      parameters:
      - name: add_on_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of add-on.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/addon_webhook'
                type:
                - array
      x-stackQL-resource: add-on-webhook
      x-stackQL-method: List
      x-stackQL-verb: select
  /addons/{add_on_identity}/webhooks/{app_webhook_identity}:
    delete:
      summary: Delete
      description: Removes an add-on webhook subscription.  Can only be accessed by the add-on partner providing this add-on.
      operationId: add_on_webhookDelete
      tags:
      - misc
      parameters:
      - name: add_on_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of add-on.
      - name: app_webhook_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app-webhook.
      responses:
        '204':
          description: No Content
      x-stackQL-resource: add-on-webhook
      x-stackQL-method: Delete
      x-stackQL-verb: delete
    get:
      summary: Info
      description: Returns the info for an add-on webhook subscription.  Can only be accessed by the add-on partner providing
        this add-on.
      operationId: add_on_webhookInfo
      tags:
      - misc
      parameters:
      - name: add_on_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of add-on.
      - name: app_webhook_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app-webhook.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addon_webhook'
      x-stackQL-resource: add-on-webhook
      x-stackQL-method: Info
      x-stackQL-verb: select
    patch:
      summary: Update
      description: Updates the details of an add-on webhook subscription.  Can only be accessed by the add-on partner providing
        this add-on.
      operationId: add_on_webhookUpdate
      tags:
      - misc
      parameters:
      - name: add_on_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of add-on.
      - name: app_webhook_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app-webhook.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addon_webhook'
      x-stackQL-resource: add-on-webhook
      x-stackQL-method: Update
      x-stackQL-verb: update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                authorization:
                  $ref: '#/components/schemas/authorization'
                include:
                  $ref: '#/components/schemas/include'
                level:
                  $ref: '#/components/schemas/level'
                secret:
                  $ref: '#/components/schemas/secret'
                url:
                  $ref: '#/components/schemas/url'
              strictProperties: false
              type:
              - object
  /enterprise-accounts/{enterprise_account_identity}/archives/{archive_year}/{archive_month}:
    get:
      summary: Info
      description: Get archive for a single month.
      operationId: archiveInfo
      tags:
      - misc
      parameters:
      - name: enterprise_account_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of enterprise-account.
      - name: archive_year
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for year of archive.
      - name: archive_month
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for month of archive.
      responses:
        '200':
          description: Successful operation
      x-stackQL-resource: archive
      x-stackQL-method: Info
      x-stackQL-verb: select
  /enterprise-accounts/{enterprise_account_identity}/archives:
    get:
      summary: List
      description: List existing archives.
      operationId: archiveList
      tags:
      - misc
      parameters:
      - name: enterprise_account_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of enterprise-account.
      responses:
        '200':
          description: Successful operation
      x-stackQL-resource: archive
      x-stackQL-method: List
      x-stackQL-verb: select
  /enterprise-accounts/{enterprise_account_identity}/events:
    get:
      summary: List
      description: List existing events. Returns all events for one day, defaulting to current day. Order, actor, action,
        and type, and day query params can be specified as query parameters. For example, '/enterprise-accounts/:id/events?order=desc&actor=user@example.com&action=create&type=app&day=2020-09-30'
        would return events in descending order and only return app created events by the user with user@example.com email
        address.
      operationId: audit_trail_eventList
      tags:
      - misc
      parameters:
      - name: enterprise_account_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of enterprise-account.
      responses:
        '200':
          description: Successful operation
      x-stackQL-resource: audit-trail-event
      x-stackQL-method: List
      x-stackQL-verb: select
  /account/credits:
    post:
      summary: Create
      description: Create a new credit.
      operationId: creditCreate
      tags:
      - misc
      parameters: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credit'
      x-stackQL-resource: credit
      x-stackQL-method: Create
      x-stackQL-verb: insert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                code1:
                  description: first code from a discount card
                  example: 012abc
                  type:
                  - string
                code2:
                  description: second code from a discount card
                  example: 012abc
                  type:
                  - string
              type:
              - object
    get:
      summary: List
      description: List existing credits.
      operationId: creditList
      tags:
      - misc
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/credit'
                type:
                - array
      x-stackQL-resource: credit
      x-stackQL-method: List
      x-stackQL-verb: select
  /account/credits/{credit_identity}:
    get:
      summary: Info
      description: Info for existing credit.
      operationId: creditInfo
      tags:
      - misc
      parameters:
      - name: credit_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of credit.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credit'
      x-stackQL-resource: credit
      x-stackQL-method: Info
      x-stackQL-verb: select
  /enterprise-accounts/{enterprise_account_id}/usage/daily:
    get:
      summary: Info
      description: 'Retrieves usage for an enterprise account for a range of days. Start and end dates can be specified as
        query parameters using the date format YYYY-MM-DD. The enterprise account identifier can be found from the [enterprise
        account list](https://devcenter.heroku.com/articles/platform-api-reference#enterprise-account-list).

        '
      operationId: enterprise_account_daily_usageInfo
      tags:
      - misc
      parameters:
      - name: enterprise_account_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for id of enterprise-account.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/enterprise-account-daily-usage'
                type:
                - array
      x-stackQL-resource: enterprise-account-daily-usage
      x-stackQL-method: Info
      x-stackQL-verb: select
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                start:
                  $ref: '#/components/schemas/start_date'
                end:
                  $ref: '#/components/schemas/end_date'
              required:
              - start
              type:
              - object
  /enterprise-accounts/{enterprise_account_identity}/members:
    get:
      summary: List
      description: List members in an enterprise account.
      operationId: enterprise_account_memberList
      tags:
      - misc
      parameters:
      - name: enterprise_account_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of enterprise-account.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/enterprise-account-member'
                type:
                - array
      x-stackQL-resource: enterprise-account-member
      x-stackQL-method: List
      x-stackQL-verb: select
    post:
      summary: Create
      description: Create a member in an enterprise account.
      operationId: enterprise_account_memberCreate
      tags:
      - misc
      parameters:
      - name: enterprise_account_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of enterprise-account.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/enterprise-account-member'
      x-stackQL-resource: enterprise-account-member
      x-stackQL-method: Create
      x-stackQL-verb: insert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                user:
                  $ref: '#/components/schemas/user_identity'
                permissions:
                  $ref: '#/components/schemas/permissions'
                federated:
                  description: whether membership is being created as part of SSO JIT
                  example: false
                  type:
                  - boolean
              required:
              - user
              - permissions
              type:
              - object
  /enterprise-accounts/{enterprise_account_identity}/members/{enterprise_account_member_user_identity}:
    patch:
      summary: Update
      description: Update a member in an enterprise account.
      operationId: enterprise_account_memberUpdate
      tags:
      - misc
      parameters:
      - name: enterprise_account_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of enterprise-account.
      - name: enterprise_account_member_user_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for user_identity of enterprise-account-member.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/enterprise-account-member'
      x-stackQL-resource: enterprise-account-member
      x-stackQL-method: Update
      x-stackQL-verb: update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                permissions:
                  $ref: '#/components/schemas/permissions'
              required:
              - permissions
              type:
              - object
    delete:
      summary: Delete
      description: delete a member in an enterprise account.
      operationId: enterprise_account_memberDelete
      tags:
      - misc
      parameters:
      - name: enterprise_account_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of enterprise-account.
      - name: enterprise_account_member_user_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for user_identity of enterprise-account-member.
      responses:
        '204':
          description: No Content
      x-stackQL-resource: enterprise-account-member
      x-stackQL-method: Delete
      x-stackQL-verb: delete
  /enterprise-accounts/{enterprise_account_id}/usage/monthly:
    get:
      summary: Info
      description: 'Retrieves usage for an enterprise account for a range of months. Start and end dates can be specified
        as query parameters using the date format YYYY-MM. If no end date is specified, one month of usage is returned. The
        enterprise account identifier can be found from the [enterprise account list](https://devcenter.heroku.com/articles/platform-api-reference#enterprise-account-list).

        '
      operationId: enterprise_account_monthly_usageInfo
      tags:
      - misc
      parameters:
      - name: enterprise_account_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for id of enterprise-account.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/enterprise-account-monthly-usage'
                type:
                - array
      x-stackQL-resource: enterprise-account-monthly-usage
      x-stackQL-method: Info
      x-stackQL-verb: select
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                start:
                  $ref: '#/components/schemas/start_date'
                end:
                  $ref: '#/components/schemas/end_date'
              required:
              - start
              type:
              - object
  /enterprise-accounts:
    get:
      summary: List
      description: List enterprise accounts in which you are a member.
      operationId: enterprise_accountList
      tags:
      - misc
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/enterprise-account'
                type:
                - array
      x-stackQL-resource: enterprise-account
      x-stackQL-method: List
      x-stackQL-verb: select
  /enterprise-accounts/{enterprise_account_identity}:
    get:
      summary: Info
      description: Information about an enterprise account.
      operationId: enterprise_accountInfo
      tags:
      - misc
      parameters:
      - name: enterprise_account_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of enterprise-account.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/enterprise-account'
      x-stackQL-resource: enterprise-account
      x-stackQL-method: Info
      x-stackQL-verb: select
    patch:
      summary: Update
      description: Update enterprise account properties
      operationId: enterprise_accountUpdate
      tags:
      - misc
      parameters:
      - name: enterprise_account_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of enterprise-account.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/enterprise-account'
      x-stackQL-resource: enterprise-account
      x-stackQL-method: Update
      x-stackQL-verb: exec
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  $ref: '#/components/schemas/name'
              type:
              - object
  /filters/apps:
    post:
      summary: Apps
      description: Request an apps list filtered by app id.
      operationId: filter_appsApps
      tags:
      - misc
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/team-app'
                type:
                - array
      x-stackQL-resource: filter-apps
      x-stackQL-method: Apps
      x-stackQL-verb: select
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filter'
  /generations/{stack_identity}:
    get:
      summary: Info
      description: Info for generation.
      operationId: generationInfo
      tags:
      - misc
      parameters:
      - name: stack_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of stack.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generation'
      x-stackQL-resource: generation
      x-stackQL-method: Info
      x-stackQL-verb: select
  /generations:
    get:
      summary: List
      description: List available generations.
      operationId: generationList
      tags:
      - misc
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/generation'
                type:
                - array
      x-stackQL-resource: generation
      x-stackQL-method: List
      x-stackQL-verb: select
  /teams/{team_identity}/available-generations:
    get:
      summary: List by Team
      description: List available generations for a team.
      operationId: generationListByTeam
      tags:
      - misc
      parameters:
      - name: team_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of team.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/generation'
                type:
                - array
      x-stackQL-resource: generation
      x-stackQL-method: ListByTeam
      x-stackQL-verb: select
  /teams/{team_name}/identity-providers:
    get:
      summary: List By Team
      description: Get a list of a team's Identity Providers
      operationId: identity_providerListByTeam
      tags:
      - misc
      parameters:
      - name: team_name
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for name of team.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/identity-provider'
                type:
                - array
      x-stackQL-resource: identity-provider
      x-stackQL-method: ListByTeam
      x-stackQL-verb: select
    post:
      summary: Create By Team
      description: Create an Identity Provider for a team
      operationId: identity_providerCreateByTeam
      tags:
      - misc
      parameters:
      - name: team_name
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for name of team.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity-provider'
      x-stackQL-resource: identity-provider
      x-stackQL-method: CreateByTeam
      x-stackQL-verb: insert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                certificate:
                  $ref: '#/components/schemas/certificate'
                entity_id:
                  $ref: '#/components/schemas/entity_id'
                slo_target_url:
                  $ref: '#/components/schemas/slo_target_url'
                sso_target_url:
                  $ref: '#/components/schemas/sso_target_url'
              required:
              - certificate
              - sso_target_url
              - entity_id
              type:
              - object
  /teams/{team_name}/identity-providers/{identity_provider_id}:
    patch:
      summary: Update By Team
      description: Update a team's Identity Provider
      operationId: identity_providerUpdateByTeam
      tags:
      - misc
      parameters:
      - name: team_name
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for name of team.
      - name: identity_provider_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for id of identity-provider.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity-provider'
      x-stackQL-resource: identity-provider
      x-stackQL-method: UpdateByTeam
      x-stackQL-verb: update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                certificate:
                  $ref: '#/components/schemas/certificate'
                entity_id:
                  $ref: '#/components/schemas/entity_id'
                slo_target_url:
                  $ref: '#/components/schemas/slo_target_url'
                sso_target_url:
                  $ref: '#/components/schemas/sso_target_url'
              type:
              - object
    delete:
      summary: Delete By Team
      description: Delete a team's Identity Provider
      operationId: identity_providerDeleteByTeam
      tags:
      - misc
      parameters:
      - name: team_name
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for name of team.
      - name: identity_provider_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for id of identity-provider.
      responses:
        '204':
          description: No Content
      x-stackQL-resource: identity-provider
      x-stackQL-method: DeleteByTeam
      x-stackQL-verb: delete
  /spaces/{space_identity}/inbound-ruleset:
    get:
      summary: Current
      description: Current inbound ruleset for a space
      operationId: inbound_rulesetCurrent
      tags:
      - misc
      parameters:
      - name: space_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of space.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inbound-ruleset'
      x-stackQL-resource: inbound-ruleset
      x-stackQL-method: Current
      x-stackQL-verb: select
    put:
      summary: Create
      description: Create a new inbound ruleset
      operationId: inbound_rulesetCreate
      tags:
      - misc
      parameters:
      - name: space_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of space.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inbound-ruleset'
      x-stackQL-resource: inbound-ruleset
      x-stackQL-method: Create
      x-stackQL-verb: insert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type:
              - object
              properties:
                rules:
                  type:
                  - array
                  items:
                    $ref: '#/components/schemas/rule'
  /spaces/{space_identity}/inbound-rulesets/{inbound_ruleset_identity}:
    get:
      summary: Info
      description: Info on an existing Inbound Ruleset
      operationId: inbound_rulesetInfo
      tags:
      - misc
      parameters:
      - name: space_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of space.
      - name: inbound_ruleset_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of inbound-ruleset.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inbound-ruleset'
      x-stackQL-resource: inbound-ruleset
      x-stackQL-method: Info
      x-stackQL-verb: select
  /spaces/{space_identity}/inbound-rulesets:
    get:
      summary: List
      description: List all inbound rulesets for a space
      operationId: inbound_rulesetList
      tags:
      - misc
      parameters:
      - name: space_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of space.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/inbound-ruleset'
                type:
                - array
      x-stackQL-resource: inbound-ruleset
      x-stackQL-method: List
      x-stackQL-verb: select
  /account/invoice-address:
    get:
      summary: info
      description: Retrieve existing invoice address.
      operationId: invoice_addressInfo
      tags:
      - misc
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoice-address'
      x-stackQL-resource: invoice-address
      x-stackQL-method: Info
      x-stackQL-verb: select
    put:
      summary: update
      description: Update invoice address for an account.
      operationId: invoice_addressUpdate
      tags:
      - misc
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoice-address'
      x-stackQL-resource: invoice-address
      x-stackQL-method: Update
      x-stackQL-verb: select
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                address_1:
                  $ref: '#/components/schemas/address_1'
                address_2:
                  $ref: '#/components/schemas/address_2'
                city:
                  $ref: '#/components/schemas/city'
                country:
                  $ref: '#/components/schemas/country'
                other:
                  $ref: '#/components/schemas/other'
                postal_code:
                  $ref: '#/components/schemas/postal_code'
                state:
                  $ref: '#/components/schemas/state'
                use_invoice_address:
                  $ref: '#/components/schemas/use_invoice_address'
              type:
              - object
  /account/invoices/{invoice_identity}:
    get:
      summary: Info
      description: Info for existing invoice.
      operationId: invoiceInfo
      tags:
      - misc
      parameters:
      - name: invoice_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of invoice.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoice'
      x-stackQL-resource: invoice
      x-stackQL-method: Info
      x-stackQL-verb: select
  /account/invoices:
    get:
      summary: List
      description: List existing invoices.
      operationId: invoiceList
      tags:
      - misc
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/invoice'
                type:
                - array
      x-stackQL-resource: invoice
      x-stackQL-method: List
      x-stackQL-verb: select
  /password-resets:
    post:
      summary: Reset Password
      description: Reset account's password. This will send a reset password link to the user's email address.
      operationId: password_resetResetPassword
      tags:
      - misc
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/password-reset'
      x-stackQL-resource: password-reset
      x-stackQL-method: ResetPassword
      x-stackQL-verb: select
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                email:
                  $ref: '#/components/schemas/email'
              required:
              - email
              type:
              - object
  /password-resets/{password_reset_reset_password_token}/actions/finalize:
    post:
      summary: Complete Reset Password
      description: Complete password reset.
      operationId: password_resetCompleteResetPassword
      tags:
      - misc
      parameters:
      - name: password_reset_reset_password_token
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for reset_password_token of password-reset.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/password-reset'
      x-stackQL-resource: password-reset
      x-stackQL-method: CompleteResetPassword
      x-stackQL-verb: select
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                password:
                  $ref: '#/components/schemas/password'
                password_confirmation:
                  $ref: '#/components/schemas/password_confirmation'
              required:
              - password
              - password_confirmation
              type:
              - object
  /spaces/{space_identity}/peering-info:
    get:
      summary: Info
      description: Provides the necessary information to establish an AWS VPC Peering with your private space.
      operationId: peering_infoInfo
      tags:
      - misc
      parameters:
      - name: space_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of space.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/peering-info'
      x-stackQL-resource: peering-info
      x-stackQL-method: Info
      x-stackQL-verb: select
  /teams/{team_identity}/permissions:
    get:
      summary: List
      description: List permission entities for a team.
      operationId: permission_entityList
      tags:
      - misc
      parameters:
      - name: team_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of team.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/permission-entity'
                type:
                - array
      x-stackQL-resource: permission-entity
      x-stackQL-method: List
      x-stackQL-verb: select
  /pipelines/{pipeline_id}/latest-builds:
    get:
      summary: List
      description: List latest builds for each app in a pipeline
      operationId: pipeline_buildList
      tags:
      - misc
      parameters:
      - name: pipeline_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for id of pipeline.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/pipeline-build'
                type:
                - array
      x-stackQL-resource: pipeline-build
      x-stackQL-method: List
      x-stackQL-verb: select
  /pipelines/{pipeline_id}/stage/{pipeline_coupling_stage}/config-vars:
    get:
      summary: Info for App
      description: Get config-vars for a pipeline stage.
      operationId: pipeline_config_varInfoForApp
      tags:
      - misc
      parameters:
      - name: pipeline_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for id of pipeline.
      - name: pipeline_coupling_stage
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for stage of pipeline-coupling.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/config_vars'
      x-stackQL-resource: pipeline-config-var
      x-stackQL-method: InfoForApp
      x-stackQL-verb: select
    patch:
      summary: Update
      description: Update config-vars for a pipeline stage. You can update existing config-vars by setting them again, and
        remove by setting it to `null`.
      operationId: pipeline_config_varUpdate
      tags:
      - misc
      parameters:
      - name: pipeline_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for id of pipeline.
      - name: pipeline_coupling_stage
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for stage of pipeline-coupling.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/config_vars'
      x-stackQL-resource: pipeline-config-var
      x-stackQL-method: Update
      x-stackQL-verb: update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              additionalProperties: false
              description: "hash of config changes \xE2\u20AC\u201C update values or delete by seting it to `null`"
              example:
                FOO: bar
                BAZ: qux
              patternProperties:
                ^[\w\.\:\[\]]+$:
                  type:
                  - string
                  - 'null'
              type:
              - object
  /pipeline-promotions/{pipeline_promotion_id}/promotion-targets:
    get:
      summary: List
      description: List promotion targets belonging to an existing promotion.
      operationId: pipeline_promotion_targetList
      tags:
      - misc
      parameters:
      - name: pipeline_promotion_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for id of pipeline-promotion.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/pipeline-promotion-target'
                type:
                - array
      x-stackQL-resource: pipeline-promotion-target
      x-stackQL-method: List
      x-stackQL-verb: select
  /pipelines/{pipeline_id}/pipeline-stack:
    get:
      summary: Default Stack
      description: The stack for a given pipeline, used for CI and Review Apps that have no stack defined in app.json.
      operationId: pipeline_stackDefaultStack
      tags:
      - misc
      parameters:
      - name: pipeline_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for id of pipeline.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pipeline-stack'
      x-stackQL-resource: pipeline-stack
      x-stackQL-method: DefaultStack
      x-stackQL-verb: select
  /pipeline-transfers:
    post:
      summary: Create
      description: Create a new pipeline transfer.
      operationId: pipeline_transferCreate
      tags:
      - misc
      parameters: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pipeline-transfer'
      x-stackQL-resource: pipeline-transfer
      x-stackQL-method: Create
      x-stackQL-verb: insert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                pipeline:
                  description: The pipeline to transfer
                  properties:
                    id:
                      $ref: '#/components/schemas/id'
                  type:
                  - object
                new_owner:
                  description: New pipeline owner
                  properties:
                    id:
                      description: unique identifier of a pipeline owner
                      example: 01234567-89ab-cdef-0123-456789abcdef
                      format: uuid
                      type:
                      - string
                    type:
                      description: type of pipeline owner
                      example: team
                      pattern: (^team$|^user$)
                      type:
                      - string
                  type:
                  - object
              required:
              - pipeline
              - new_owner
              type:
              - object
  /account/rate-limits:
    get:
      summary: Info
      description: Info for rate limits.
      operationId: rate_limitInfo
      tags:
      - misc
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rate-limit'
      x-stackQL-resource: rate-limit
      x-stackQL-method: Info
      x-stackQL-verb: select
  /review-apps:
    post:
      summary: Create
      description: Create a new review app
      operationId: review_appCreate
      tags:
      - misc
      parameters: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/review-app'
      x-stackQL-resource: review-app
      x-stackQL-method: Create
      x-stackQL-verb: insert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                branch:
                  $ref: '#/components/schemas/branch'
                pr_number:
                  $ref: '#/components/schemas/pr_number'
                pipeline:
                  $ref: '#/components/schemas/id'
                source_blob:
                  $ref: '#/components/schemas/source_blob'
                environment:
                  $ref: '#/components/schemas/config_vars'
                  description: A set of key value pairs which will be put into the environment of the spawned review app process.
                fork_repo_id:
                  $ref: '#/components/schemas/fork_repo_id'
              required:
              - branch
              - pipeline
              - source_blob
              type:
              - object
  /review-apps/{review_app_id}:
    get:
      summary: Get review app
      description: Gets an existing review app
      operationId: review_appGetReviewApp
      tags:
      - misc
      parameters:
      - name: review_app_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for id of review-app.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/review-app'
      x-stackQL-resource: review-app
      x-stackQL-method: GetReviewApp
      x-stackQL-verb: exec
    delete:
      summary: Delete
      description: Delete an existing review app
      operationId: review_appDelete
      tags:
      - misc
      parameters:
      - name: review_app_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for id of review-app.
      responses:
        '204':
          description: No Content
      x-stackQL-resource: review-app
      x-stackQL-method: Delete
      x-stackQL-verb: delete
  /apps/{app_identity}/review-app:
    get:
      summary: Get review app by app_id
      description: Get a review app using the associated app_id
      operationId: review_appGetReviewAppByAppId
      tags:
      - misc
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/review-app'
      x-stackQL-resource: review-app
      x-stackQL-method: GetReviewAppByAppId
      x-stackQL-verb: exec
  /pipelines/{pipeline_id}/review-apps:
    get:
      summary: List
      description: List review apps for a pipeline
      operationId: review_appList
      tags:
      - misc
      parameters:
      - name: pipeline_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for id of pipeline.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/review-app'
                type:
                - array
      x-stackQL-resource: review-app
      x-stackQL-method: List
      x-stackQL-verb: select
  /pipelines/{pipeline_id}/review-app-config:
    post:
      summary: Enable
      description: Enable review apps for a pipeline
      operationId: review_app_configEnable
      tags:
      - misc
      parameters:
      - name: pipeline_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for id of pipeline.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/review-app-config'
      x-stackQL-resource: review-app-config
      x-stackQL-method: Enable
      x-stackQL-verb: insert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                repo:
                  $ref: '#/components/schemas/repo'
                  description: The full_name of the repository that you want enable review-apps from.
                automatic_review_apps:
                  $ref: '#/components/schemas/automatic_review_apps'
                  description: If true, this will trigger the creation of review apps when pull-requests are opened in the
                    repo.
                destroy_stale_apps:
                  $ref: '#/components/schemas/destroy_stale_apps'
                  description: If true, this will trigger automatic deletion of review apps when they're stale
                stale_days:
                  $ref: '#/components/schemas/stale_days'
                  description: If destroy_stale_apps is true, then apps will be destroyed after this many days
                deploy_target:
                  $ref: '#/components/schemas/deploy_target'
                  description: Provides a key/value pair to specify whether to use a common runtime or a private space
                wait_for_ci:
                  $ref: '#/components/schemas/wait_for_ci'
                  description: If true, review apps will only be created when CI passes
                base_name:
                  $ref: '#/components/schemas/base_name'
                  description: A unique prefix that will be used to create review app names
              required:
              - repo
              type:
              - object
    get:
      summary: Info
      description: Get review apps configuration for a pipeline
      operationId: review_app_configInfo
      tags:
      - misc
      parameters:
      - name: pipeline_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for id of pipeline.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/review-app-config'
      x-stackQL-resource: review-app-config
      x-stackQL-method: Info
      x-stackQL-verb: select
    patch:
      summary: Update
      description: Update review app configuration for a pipeline
      operationId: review_app_configUpdate
      tags:
      - misc
      parameters:
      - name: pipeline_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for id of pipeline.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/review-app-config'
      x-stackQL-resource: review-app-config
      x-stackQL-method: Update
      x-stackQL-verb: update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                automatic_review_apps:
                  $ref: '#/components/schemas/automatic_review_apps'
                  description: If true, this will trigger the creation of review apps when pull-requests are opened in the
                    repo
                destroy_stale_apps:
                  $ref: '#/components/schemas/destroy_stale_apps'
                  description: If true, this will trigger automatic deletion of review apps when they're stale
                stale_days:
                  $ref: '#/components/schemas/stale_days'
                  description: If destroy_stale_apps is true, then apps will be destroyed after this many days
                deploy_target:
                  $ref: '#/components/schemas/deploy_target'
                  description: Provides a key/value pair to specify whether to use a common runtime or a private space
                wait_for_ci:
                  $ref: '#/components/schemas/wait_for_ci'
                  description: If true, review apps will only be created when CI passes
                base_name:
                  $ref: '#/components/schemas/base_name'
                  description: A unique prefix that will be used to create review app names
              type:
              - object
    delete:
      summary: Delete
      description: Disable review apps for a pipeline
      operationId: review_app_configDelete
      tags:
      - misc
      parameters:
      - name: pipeline_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for id of pipeline.
      responses:
        '204':
          description: No Content
      x-stackQL-resource: review-app-config
      x-stackQL-method: Delete
      x-stackQL-verb: delete
  /users/{account_identity}/sms-number:
    get:
      summary: SMS Number
      description: Recover an account using an SMS recovery code
      operationId: sms_numberSmsNumber
      tags:
      - misc
      parameters:
      - name: account_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of account.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sms-number'
      x-stackQL-resource: sms-number
      x-stackQL-method: SmsNumber
      x-stackQL-verb: select
  /users/{account_identity}/sms-number/actions/recover:
    post:
      summary: Recover
      description: Recover an account using an SMS recovery code
      operationId: sms_numberRecover
      tags:
      - misc
      parameters:
      - name: account_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of account.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sms-number'
      x-stackQL-resource: sms-number
      x-stackQL-method: Recover
      x-stackQL-verb: select
  /users/{account_identity}/sms-number/actions/confirm:
    post:
      summary: Confirm
      description: Confirm an SMS number change with a confirmation code
      operationId: sms_numberConfirm
      tags:
      - misc
      parameters:
      - name: account_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of account.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sms-number'
      x-stackQL-resource: sms-number
      x-stackQL-method: Confirm
      x-stackQL-verb: select
  /sources:
    post:
      summary: Create
      description: Create URLs for uploading and downloading source.
      operationId: sourceCreate
      tags:
      - misc
      parameters: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/source'
      x-stackQL-resource: source
      x-stackQL-method: Create
      x-stackQL-verb: insert
  /apps/{app_identity}/sources:
    post:
      summary: Create - Deprecated
      description: Create URLs for uploading and downloading source. Deprecated in favor of `POST /sources`
      operationId: sourceCreateDeprecated
      tags:
      - misc
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/source'
      x-stackQL-resource: source
      x-stackQL-method: CreateDeprecated
      x-stackQL-verb: insert
  /spaces/{space_identity}/members/{account_identity}:
    get:
      summary: Info
      description: List permissions for a given user on a given space.
      operationId: space_app_accessInfo
      tags:
      - misc
      parameters:
      - name: space_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of space.
      - name: account_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of account.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/space-app-access'
      x-stackQL-resource: space-app-access
      x-stackQL-method: Info
      x-stackQL-verb: select
    patch:
      summary: Update
      description: Update an existing user's set of permissions on a space.
      operationId: space_app_accessUpdate
      tags:
      - misc
      parameters:
      - name: space_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of space.
      - name: account_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of account.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/space-app-access'
      x-stackQL-resource: space-app-access
      x-stackQL-method: Update
      x-stackQL-verb: update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type:
              - object
              required:
              - permissions
              properties:
                permissions:
                  type:
                  - array
                  items:
                    type:
                    - object
                    properties:
                      name:
                        type:
                        - string
  /spaces/{space_identity}/members:
    get:
      summary: List
      description: List all users and their permissions on a space.
      operationId: space_app_accessList
      tags:
      - misc
      parameters:
      - name: space_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of space.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/space-app-access'
                type:
                - array
      x-stackQL-resource: space-app-access
      x-stackQL-method: List
      x-stackQL-verb: select
  /spaces/{space_identity}/nat:
    get:
      summary: Info
      description: Current state of network address translation for a space.
      operationId: space_natInfo
      tags:
      - misc
      parameters:
      - name: space_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of space.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/space-nat'
      x-stackQL-resource: space-nat
      x-stackQL-method: Info
      x-stackQL-verb: select
  /spaces/{space_identity}/topology:
    get:
      summary: Topology
      description: Current space topology
      operationId: space_topologyTopology
      tags:
      - misc
      parameters:
      - name: space_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of space.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/space-topology'
      x-stackQL-resource: space-topology
      x-stackQL-method: Topology
      x-stackQL-verb: select
  /spaces/{space_identity}/transfer:
    post:
      summary: transfer
      description: Transfer space between enterprise teams
      operationId: space_transferTransfer
      tags:
      - misc
      parameters:
      - name: space_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of space.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/space'
      x-stackQL-resource: space-transfer
      x-stackQL-method: Transfer
      x-stackQL-verb: exec
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                new_owner:
                  $ref: '#/components/schemas/name'
              required:
              - new_owner
              type:
              - object
  /teams/{team_identity}/addons:
    get:
      summary: List For Team
      description: List add-ons used across all Team apps
      operationId: team_add_onListForTeam
      tags:
      - misc
      parameters:
      - name: team_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of team.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/add-on'
                type:
                - array
      x-stackQL-resource: team-add-on
      x-stackQL-method: ListForTeam
      x-stackQL-verb: select
  /teams/permissions:
    get:
      summary: List
      description: Lists permissions available to teams.
      operationId: team_app_permissionList
      tags:
      - misc
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/team-app-permission'
                type:
                - array
      x-stackQL-resource: team-app-permission
      x-stackQL-method: List
      x-stackQL-verb: select
  /teams/{team_id}/usage/daily:
    get:
      summary: Info
      description: 'Retrieves usage for an enterprise team for a range of days. Start and end dates can be specified as query
        parameters using the date format YYYY-MM-DD. The team identifier can be found from the [team list endpoint](https://devcenter.heroku.com/articles/platform-api-reference#team-list).

        '
      operationId: team_daily_usageInfo
      tags:
      - misc
      parameters:
      - name: team_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for id of team.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/team-daily-usage'
                type:
                - array
      x-stackQL-resource: team-daily-usage
      x-stackQL-method: Info
      x-stackQL-verb: select
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                start:
                  $ref: '#/components/schemas/start_date'
                end:
                  $ref: '#/components/schemas/end_date'
              required:
              - start
              type:
              - object
  /teams/{team_identity}/delinquency:
    get:
      summary: Info
      description: Team delinquency information.
      operationId: team_delinquencyInfo
      tags:
      - misc
      parameters:
      - name: team_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of team.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-delinquency'
      x-stackQL-resource: team-delinquency
      x-stackQL-method: Info
      x-stackQL-verb: select
  /teams/{team_identity}/invoices/{team_invoice_identity}:
    get:
      summary: Info
      description: Info for existing invoice.
      operationId: team_invoiceInfo
      tags:
      - misc
      parameters:
      - name: team_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of team.
      - name: team_invoice_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of team-invoice.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-invoice'
      x-stackQL-resource: team-invoice
      x-stackQL-method: Info
      x-stackQL-verb: select
  /teams/{team_identity}/invoices:
    get:
      summary: List
      description: List existing invoices.
      operationId: team_invoiceList
      tags:
      - misc
      parameters:
      - name: team_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of team.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/team-invoice'
                type:
                - array
      x-stackQL-resource: team-invoice
      x-stackQL-method: List
      x-stackQL-verb: select
  /teams/{team_id}/usage/monthly:
    get:
      summary: Info
      description: 'Retrieves usage for an enterprise team for a range of months. Start and end dates can be specified as
        query parameters using the date, YYYY-MM. If no end date is specified, one month of usage is returned. The team identifier
        can be found from the [team list endpoint](https://devcenter.heroku.com/articles/platform-api-reference#team-list).

        '
      operationId: team_monthly_usageInfo
      tags:
      - misc
      parameters:
      - name: team_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for id of team.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/team-monthly-usage'
                type:
                - array
      x-stackQL-resource: team-monthly-usage
      x-stackQL-method: Info
      x-stackQL-verb: select
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                start:
                  $ref: '#/components/schemas/start_date'
                end:
                  $ref: '#/components/schemas/end_date'
              required:
              - start
              type:
              - object
  /teams/{team_preferences_identity}/preferences:
    get:
      summary: List
      description: Retrieve Team Preferences
      operationId: team_preferencesList
      tags:
      - misc
      parameters:
      - name: team_preferences_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of team-preferences.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-preferences'
      x-stackQL-resource: team-preferences
      x-stackQL-method: List
      x-stackQL-verb: select
    patch:
      summary: Update
      description: Update Team Preferences
      operationId: team_preferencesUpdate
      tags:
      - misc
      parameters:
      - name: team_preferences_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of team-preferences.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-preferences'
      x-stackQL-resource: team-preferences
      x-stackQL-method: Update
      x-stackQL-verb: update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type:
              - object
              properties:
                addons-controls:
                  $ref: '#/components/schemas/addons-controls'
  /teams/{team_identity}/spaces:
    get:
      summary: List
      description: List spaces owned by the team
      operationId: team_spaceList
      tags:
      - misc
      parameters:
      - name: team_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of team.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/space'
                type:
                - array
      x-stackQL-resource: team-space
      x-stackQL-method: List
      x-stackQL-verb: select
  /telemetry-drains:
    post:
      summary: Create
      description: Create a telemetry drain.
      operationId: telemetry_drainCreate
      tags:
      - misc
      parameters: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/telemetry-drain'
      x-stackQL-resource: telemetry-drain
      x-stackQL-method: Create
      x-stackQL-verb: insert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              additionalProperties: false
              properties:
                owner:
                  $ref: '#/components/schemas/owner'
                signals:
                  $ref: '#/components/schemas/signals'
                exporter:
                  $ref: '#/components/schemas/exporter'
              required:
              - owner
              - signals
              - exporter
              type:
              - object
  /apps/{app_identity}/telemetry-drains:
    get:
      summary: List by App
      description: List telemetry drains for an app.
      operationId: telemetry_drainListByApp
      tags:
      - misc
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/telemetry-drain'
                type:
                - array
      x-stackQL-resource: telemetry-drain
      x-stackQL-method: ListByApp
      x-stackQL-verb: select
  /spaces/{space_identity}/telemetry-drains:
    get:
      summary: List by Space
      description: List telemetry drains for a space.
      operationId: telemetry_drainListBySpace
      tags:
      - misc
      parameters:
      - name: space_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of space.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/telemetry-drain'
                type:
                - array
      x-stackQL-resource: telemetry-drain
      x-stackQL-method: ListBySpace
      x-stackQL-verb: select
  /telemetry-drains/{telemetry_drain_identity}:
    patch:
      summary: Update
      description: Update a telemetry drain.
      operationId: telemetry_drainUpdate
      tags:
      - misc
      parameters:
      - name: telemetry_drain_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of telemetry-drain.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/telemetry-drain'
      x-stackQL-resource: telemetry-drain
      x-stackQL-method: Update
      x-stackQL-verb: update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              additionalProperties: false
              properties:
                signals:
                  $ref: '#/components/schemas/signals'
                exporter:
                  $ref: '#/components/schemas/exporter'
              type:
              - object
    delete:
      summary: Delete
      description: Delete a telemetry drain.
      operationId: telemetry_drainDelete
      tags:
      - misc
      parameters:
      - name: telemetry_drain_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of telemetry-drain.
      responses:
        '204':
          description: No Content
      x-stackQL-resource: telemetry-drain
      x-stackQL-method: Delete
      x-stackQL-verb: delete
    get:
      summary: Info
      description: Info for a telemetry drain.
      operationId: telemetry_drainInfo
      tags:
      - misc
      parameters:
      - name: telemetry_drain_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of telemetry-drain.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/telemetry-drain'
      x-stackQL-resource: telemetry-drain
      x-stackQL-method: Info
      x-stackQL-verb: select
  /test-runs/{test_run_id}/test-cases:
    get:
      summary: List
      description: List test cases
      operationId: test_caseList
      tags:
      - misc
      parameters:
      - name: test_run_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for id of test-run.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/test-case'
      x-stackQL-resource: test-case
      x-stackQL-method: List
      x-stackQL-verb: select
  /test-runs/{test_run_identity}/test-nodes:
    get:
      summary: List
      description: List test nodes
      operationId: test_nodeList
      tags:
      - misc
      parameters:
      - name: test_run_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of test-run.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/test-node'
      x-stackQL-resource: test-node
      x-stackQL-method: List
      x-stackQL-verb: select
  /test-runs:
    post:
      summary: Create
      description: Create a new test-run.
      operationId: test_runCreate
      tags:
      - misc
      parameters: []
      responses:
        '201':
          description: Created
      x-stackQL-resource: test-run
      x-stackQL-method: Create
      x-stackQL-verb: insert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                commit_branch:
                  $ref: '#/components/schemas/commit_branch'
                commit_message:
                  $ref: '#/components/schemas/commit_message'
                commit_sha:
                  $ref: '#/components/schemas/commit_sha'
                debug:
                  $ref: '#/components/schemas/debug'
                organization:
                  $ref: '#/components/schemas/identity'
                pipeline:
                  $ref: '#/components/schemas/identity'
                source_blob_url:
                  $ref: '#/components/schemas/source_blob_url'
              required:
              - commit_branch
              - commit_message
              - commit_sha
              - pipeline
              - source_blob_url
              type:
              - object
  /test-runs/{test_run_id}:
    get:
      summary: Info
      description: Info for existing test-run.
      operationId: test_runInfo
      tags:
      - misc
      parameters:
      - name: test_run_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for id of test-run.
      responses:
        '200':
          description: Successful operation
      x-stackQL-resource: test-run
      x-stackQL-method: Info
      x-stackQL-verb: select
  /pipelines/{pipeline_id}/test-runs:
    get:
      summary: List
      description: List existing test-runs for a pipeline.
      operationId: test_runList
      tags:
      - misc
      parameters:
      - name: pipeline_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for id of pipeline.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/test-run'
      x-stackQL-resource: test-run
      x-stackQL-method: List
      x-stackQL-verb: select
  /pipelines/{pipeline_id}/test-runs/{test_run_number}:
    get:
      summary: Info By Pipeline
      description: Info for existing test-run by Pipeline
      operationId: test_runInfoByPipeline
      tags:
      - misc
      parameters:
      - name: pipeline_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for id of pipeline.
      - name: test_run_number
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for number of test-run.
      responses:
        '200':
          description: Successful operation
      x-stackQL-resource: test-run
      x-stackQL-method: InfoByPipeline
      x-stackQL-verb: select
  /test-runs/{test_run_number}:
    patch:
      summary: Update
      description: Update a test-run's status.
      operationId: test_runUpdate
      tags:
      - misc
      parameters:
      - name: test_run_number
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for number of test-run.
      responses:
        '200':
          description: Successful operation
      x-stackQL-resource: test-run
      x-stackQL-method: Update
      x-stackQL-verb: select
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                status:
                  $ref: '#/components/schemas/status'
                message:
                  $ref: '#/components/schemas/message'
              required:
              - status
              - message
              type:
              - object
  /users/{user_preferences_identity}/preferences:
    get:
      summary: List
      description: Retrieve User Preferences
      operationId: user_preferencesList
      tags:
      - misc
      parameters:
      - name: user_preferences_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of user-preferences.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user-preferences'
      x-stackQL-resource: user-preferences
      x-stackQL-method: List
      x-stackQL-verb: select
    patch:
      summary: Update
      description: Update User Preferences
      operationId: user_preferencesUpdate
      tags:
      - misc
      parameters:
      - name: user_preferences_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of user-preferences.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user-preferences'
      x-stackQL-resource: user-preferences
      x-stackQL-method: Update
      x-stackQL-verb: update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type:
              - object
              properties:
                timezone:
                  $ref: '#/components/schemas/timezone'
                default-organization:
                  $ref: '#/components/schemas/default-organization'
                dismissed-github-banner:
                  $ref: '#/components/schemas/dismissed-github-banner'
                dismissed-getting-started:
                  $ref: '#/components/schemas/dismissed-getting-started'
                dismissed-org-access-controls:
                  $ref: '#/components/schemas/dismissed-org-access-controls'
                dismissed-org-wizard-notification:
                  $ref: '#/components/schemas/dismissed-org-wizard-notification'
                dismissed-pipelines-banner:
                  $ref: '#/components/schemas/dismissed-pipelines-banner'
                dismissed-pipelines-github-banner:
                  $ref: '#/components/schemas/dismissed-pipelines-github-banner'
                dismissed-pipelines-github-banners:
                  $ref: '#/components/schemas/dismissed-pipelines-github-banners'
                dismissed-sms-banner:
                  $ref: '#/components/schemas/dismissed-sms-banner'
components:
  schemas:
    account-delinquency:
      description: A Heroku account becomes delinquent due to non-payment. We [suspend and delete](https://help.heroku.com/EREVRILX/what-happens-if-i-have-unpaid-heroku-invoices)
        delinquent accounts if their invoices remain unpaid.
      type:
      - object
      properties:
        scheduled_suspension_time:
          $ref: '#/components/schemas/scheduled_suspension_time'
        scheduled_deletion_time:
          $ref: '#/components/schemas/scheduled_deletion_time'
    scheduled_suspension_time:
      description: scheduled time of when we will suspend your account due to delinquency
      format: date-time
      readOnly: true
      type:
      - string
      - 'null'
    scheduled_deletion_time:
      description: scheduled time of when we will delete your account due to delinquency
      format: date-time
      readOnly: true
      type:
      - string
      - 'null'
    add-on-region-capability:
      description: Add-on region capabilities represent the relationship between an Add-on Service and a specific Region.
        Only Beta and GA add-ons are returned by these endpoints.
      type:
      - object
      properties:
        id:
          $ref: '#/components/schemas/id'
        supports_private_networking:
          $ref: '#/components/schemas/supports_private_networking'
        addon_service:
          $ref: '#/components/schemas/add-on-service'
        region:
          $ref: '#/components/schemas/region'
    id:
      description: unique identifier of this add-on-region-capability
      format: uuid
      readOnly: true
      type:
      - string
    supports_private_networking:
      description: whether the add-on can be installed to a Space
      readOnly: true
      type:
      - boolean
    add-on-service:
      description: Add-on services represent add-ons that may be provisioned for apps. Endpoints under add-on services can
        be accessed without authentication.
      type:
      - object
      properties:
        cli_plugin_name:
          $ref: '#/components/schemas/cli_plugin_name'
        created_at:
          $ref: '#/components/schemas/created_at'
        human_name:
          $ref: '#/components/schemas/human_name'
        id:
          $ref: '#/components/schemas/id'
        name:
          $ref: '#/components/schemas/name'
        state:
          $ref: '#/components/schemas/state'
        supports_multiple_installations:
          $ref: '#/components/schemas/supports_multiple_installations'
        supports_sharing:
          $ref: '#/components/schemas/supports_sharing'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        supported_generations:
          $ref: '#/components/schemas/supported_generations'
    cli_plugin_name:
      description: npm package name of the add-on service's Heroku CLI plugin
      readOnly: true
      type:
      - string
      - 'null'
    created_at:
      description: when add-on-service was created
      format: date-time
      readOnly: true
      type:
      - string
    human_name:
      description: human-readable name of the add-on service provider
      readOnly: true
      type:
      - string
    name:
      description: unique name of this add-on-service
      readOnly: true
      type:
      - string
    state:
      description: release status for add-on service
      enum:
      - alpha
      - beta
      - ga
      - shutdown
      readOnly: true
      type:
      - string
    supports_multiple_installations:
      default: false
      description: whether or not apps can have access to more than one instance of this add-on at the same time
      readOnly: true
      type:
      - boolean
    supports_sharing:
      default: false
      description: whether or not apps can have access to add-ons billed to a different app
      readOnly: true
      type:
      - boolean
    updated_at:
      description: when add-on-service was updated
      format: date-time
      readOnly: true
      type:
      - string
    supported_generations:
      description: generations supported by this add-on
      readonly: true
      type:
      - array
      items:
        type:
        - object
        properties:
          name:
            $ref: '#/components/schemas/name'
          id:
            $ref: '#/components/schemas/id'
    region:
      description: A region represents a geographic location in which your application may run.
      type:
      - object
      properties:
        country:
          $ref: '#/components/schemas/country'
        created_at:
          $ref: '#/components/schemas/created_at'
        description:
          $ref: '#/components/schemas/description'
        id:
          $ref: '#/components/schemas/id'
        locale:
          $ref: '#/components/schemas/locale'
        name:
          $ref: '#/components/schemas/name'
        private_capable:
          $ref: '#/components/schemas/private_capable'
        provider:
          $ref: '#/components/schemas/provider'
        updated_at:
          $ref: '#/components/schemas/updated_at'
    country:
      description: country where the region exists
      readOnly: true
      type:
      - string
    description:
      description: description of region
      readOnly: true
      type:
      - string
    locale:
      description: area in the country where the region exists
      readOnly: true
      type:
      - string
    private_capable:
      description: whether or not region is available for creating a Private Space
      readOnly: true
      type:
      - boolean
    provider:
      description: provider of underlying substrate
      type:
      - object
      properties:
        name:
          description: name of provider
          readOnly: true
          type:
          - string
        region:
          description: region name used by provider
          readOnly: true
          type:
          - string
          enum:
          - ap-south-1
          - eu-west-1
          - ap-southeast-1
          - ap-southeast-2
          - eu-central-1
          - eu-west-2
          - ap-northeast-2
          - ap-northeast-1
          - us-east-1
          - sa-east-1
          - us-west-1
          - us-west-2
          - ca-central-1
      readOnly: true
    app-webhook-delivery:
      description: Represents the delivery of a webhook notification, including its current status.
      type:
      - object
      properties:
        created_at:
          $ref: '#/components/schemas/created_at'
        event:
          description: identity of event
          properties:
            id:
              $ref: '#/components/schemas/id'
            include:
              $ref: '#/components/schemas/include'
          type:
          - object
        id:
          $ref: '#/components/schemas/id'
        num_attempts:
          $ref: '#/components/schemas/num_attempts'
        next_attempt_at:
          $ref: '#/components/schemas/next_attempt_at'
        last_attempt:
          description: last attempt of a delivery
          properties:
            id:
              $ref: '#/components/schemas/attempt_id'
            code:
              $ref: '#/components/schemas/attempt_code'
            error_class:
              $ref: '#/components/schemas/attempt_error_class'
            status:
              $ref: '#/components/schemas/attempt_status'
            created_at:
              $ref: '#/components/schemas/attempt_created_at'
            updated_at:
              $ref: '#/components/schemas/attempt_updated_at'
          type:
          - object
          - 'null'
        status:
          $ref: '#/components/schemas/status'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        webhook:
          description: identity of webhook
          properties:
            id:
              $ref: '#/components/schemas/id'
            level:
              $ref: '#/components/schemas/level'
          type:
          - object
    include:
      description: the type of entity that the event is related to
      type:
      - string
    num_attempts:
      description: number of times a delivery has been attempted
      readOnly: true
      type:
      - integer
    next_attempt_at:
      description: when delivery will be attempted again
      format: date-time
      type:
      - string
      - 'null'
    attempt_id:
      description: unique identifier of attempt
      readOnly: true
      format: uuid
      type:
      - string
    attempt_code:
      description: http response code received during attempt
      readOnly: true
      type:
      - integer
      - 'null'
    attempt_error_class:
      description: error class encountered during attempt
      readOnly: true
      type:
      - string
      - 'null'
    attempt_status:
      description: status of an attempt
      enum:
      - scheduled
      - succeeded
      - failed
      type:
      - string
    attempt_created_at:
      description: when attempt was created
      format: date-time
      type:
      - string
    attempt_updated_at:
      description: when attempt was updated
      format: date-time
      type:
      - string
    status:
      description: the delivery's status
      enum:
      - pending
      - scheduled
      - retrying
      - failed
      - succeeded
      type:
      - string
    level:
      description: if `notify`, Heroku makes a single, fire-and-forget delivery attempt. If `sync`, Heroku attempts multiple
        deliveries until the request is successful or a limit is reached
      enum:
      - notify
      - sync
      type:
      - string
    app-webhook-event:
      description: Represents a webhook event that occurred.
      type:
      - object
      properties:
        created_at:
          $ref: '#/components/schemas/created_at'
        id:
          $ref: '#/components/schemas/id'
        include:
          $ref: '#/components/schemas/include'
        payload:
          $ref: '#/components/schemas/payload'
        updated_at:
          $ref: '#/components/schemas/updated_at'
    payload:
      description: payload of event
      properties:
        action:
          $ref: '#/components/schemas/action'
        actor:
          $ref: '#/components/schemas/actor'
        data:
          $ref: '#/components/schemas/data'
        previous_data:
          $ref: '#/components/schemas/previous_data'
        resource:
          $ref: '#/components/schemas/resource'
        version:
          $ref: '#/components/schemas/version'
      type:
      - object
    action:
      description: the type of event that occurred
      type:
      - string
    actor:
      description: user that caused event
      properties:
        email:
          $ref: '#/components/schemas/email'
        id:
          $ref: '#/components/schemas/id'
      type:
      - object
    email:
      description: unique email address of account
      format: email
      readOnly: false
      type:
      - string
    data:
      description: the current details of the event
      type:
      - object
    previous_data:
      description: previous details of the event (if any)
      type:
      - object
    resource:
      description: the type of resource associated with the event
      type:
      - string
    version:
      description: the version of the details provided for the event
      type:
      - string
    addon_webhook:
      properties:
        addon:
          description: identity of add-on. Only used for add-on partner webhooks.
          properties:
            id:
              $ref: '#/components/schemas/id'
            name:
              $ref: '#/components/schemas/name'
          type:
          - object
        created_at:
          $ref: '#/components/schemas/created_at'
        id:
          $ref: '#/components/schemas/id'
        include:
          $ref: '#/components/schemas/include'
        level:
          $ref: '#/components/schemas/level'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        url:
          $ref: '#/components/schemas/url'
      description: add-on webhook
      type:
      - object
    url:
      description: the URL where the webhook's notification requests are sent
      format: uri
      type:
      - string
    authorization:
      description: a custom `Authorization` header that Heroku will include with all webhook notifications
      type:
      - 'null'
      - string
    secret:
      description: "a value that Heroku will use to sign all webhook notification requests (the signature is included in the\
        \ request\xE2\u20AC\u2122s `Heroku-Webhook-Hmac-SHA256` header)"
      type:
      - 'null'
      - string
    credit:
      description: A credit represents value that will be used up before further charges are assigned to an account.
      type:
      - object
      properties:
        amount:
          $ref: '#/components/schemas/amount'
        balance:
          $ref: '#/components/schemas/balance'
        created_at:
          $ref: '#/components/schemas/created_at'
        expires_at:
          $ref: '#/components/schemas/expires_at'
        id:
          $ref: '#/components/schemas/id'
        updated_at:
          $ref: '#/components/schemas/updated_at'
    amount:
      description: total value of credit in cents
      type:
      - number
    balance:
      description: remaining value of credit in cents
      type:
      - number
    expires_at:
      description: when credit will expire
      format: date-time
      type:
      - string
    enterprise-account-daily-usage:
      description: Usage for an enterprise account at a daily resolution.
      type:
      - object
      properties:
        addons:
          $ref: '#/components/schemas/addons'
        teams:
          description: usage by team
          type:
          - array
          items:
            type:
            - object
            properties:
              addons:
                $ref: '#/components/schemas/addons'
              apps:
                description: app usage in the team
                type:
                - array
                items:
                  $ref: '#/components/schemas/app_usage_daily'
              data:
                $ref: '#/components/schemas/data'
              dynos:
                $ref: '#/components/schemas/dynos'
              id:
                $ref: '#/components/schemas/id'
              name:
                $ref: '#/components/schemas/name'
              partner:
                $ref: '#/components/schemas/partner'
              space:
                $ref: '#/components/schemas/space'
        data:
          $ref: '#/components/schemas/data'
        date:
          $ref: '#/components/schemas/date'
        dynos:
          $ref: '#/components/schemas/dynos'
        id:
          $ref: '#/components/schemas/id'
        name:
          $ref: '#/components/schemas/name'
        partner:
          $ref: '#/components/schemas/partner'
        space:
          $ref: '#/components/schemas/space'
    addons:
      description: total add-on credits used
      readOnly: true
      type:
      - number
    app_usage_daily:
      description: Usage for an app at a daily resolution.
      type:
      - object
      properties:
        addons:
          $ref: '#/components/schemas/addons'
        app_name:
          $ref: '#/components/schemas/name'
        data:
          $ref: '#/components/schemas/data'
        dynos:
          $ref: '#/components/schemas/dynos'
        partner:
          $ref: '#/components/schemas/partner'
    dynos:
      description: dynos used
      readOnly: true
      type:
      - number
    partner:
      description: total add-on credits used for third party add-ons
      readOnly: true
      type:
      - number
    space:
      description: space credits used
      readOnly: true
      type:
      - number
    date:
      description: date of the usage
      format: date
      readOnly: true
      type:
      - string
    start_date:
      description: range start date
      pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}$
      readOnly: true
      type:
      - string
    end_date:
      description: range end date
      pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}$
      readOnly: true
      type:
      - string
    enterprise-account-member:
      description: Enterprise account members are users with access to an enterprise account.
      type:
      - object
      properties:
        enterprise_account:
          type:
          - object
          properties:
            id:
              $ref: '#/components/schemas/id'
            name:
              $ref: '#/components/schemas/name'
        id:
          $ref: '#/components/schemas/id'
        permissions:
          $ref: '#/components/schemas/expanded_permissions'
        user:
          description: user information for the membership
          properties:
            email:
              $ref: '#/components/schemas/email'
            id:
              $ref: '#/components/schemas/id'
          type:
          - object
        two_factor_authentication:
          $ref: '#/components/schemas/two_factor_authentication'
        identity_provider:
          $ref: '#/components/schemas/identity_provider'
    expanded_permissions:
      description: enterprise account permissions
      type:
      - array
      items:
        type:
        - object
        properties:
          description:
            type:
            - string
          name:
            $ref: '#/components/schemas/permission'
    permission:
      description: permission in the enterprise account
      enum:
      - view
      - create
      - manage
      - billing
      readOnly: true
      type:
      - string
    two_factor_authentication:
      description: whether the Enterprise Account member has two factor authentication enabled
      readOnly: true
      type:
      - boolean
    identity_provider:
      description: Identity Provider information the member is federated with
      properties:
        id:
          $ref: '#/components/schemas/id'
        name:
          description: name of the identity provider
          readOnly: true
          type:
          - string
        redacted:
          description: whether the identity_provider information is redacted or not
          readOnly: true
          type:
          - boolean
        owner:
          $ref: '#/components/schemas/owner'
      type:
      - 'null'
      - object
    owner:
      description: entity that owns this identity provider
      properties:
        id:
          description: unique identifier of the owner
          format: uuid
          readOnly: true
          type:
          - string
        name:
          description: name of the owner
          readOnly: true
          type:
          - string
        type:
          description: type of the owner
          enum:
          - team
          - enterprise-account
          readOnly: true
          type:
          - string
      readOnly: false
      required:
      - id
      - type
      type:
      - object
    user_identity:
      anyOf:
      - $ref: '#/components/schemas/email'
      - $ref: '#/components/schemas/id'
    permissions:
      description: permissions for enterprise account
      readOnly: true
      type:
      - array
      items:
        $ref: '#/components/schemas/permission'
    enterprise-account-monthly-usage:
      description: Usage for an enterprise account at a monthly resolution.
      type:
      - object
      properties:
        addons:
          $ref: '#/components/schemas/addons'
        teams:
          description: usage by team
          type:
          - array
          items:
            type:
            - object
            properties:
              addons:
                $ref: '#/components/schemas/addons'
              apps:
                description: app usage in the team
                type:
                - array
                items:
                  $ref: '#/components/schemas/app_usage_monthly'
              connect:
                $ref: '#/components/schemas/connect'
              data:
                $ref: '#/components/schemas/data'
              dynos:
                $ref: '#/components/schemas/dynos'
              id:
                $ref: '#/components/schemas/id'
              name:
                $ref: '#/components/schemas/name'
              partner:
                $ref: '#/components/schemas/partner'
              space:
                $ref: '#/components/schemas/space'
        connect:
          $ref: '#/components/schemas/connect'
        data:
          $ref: '#/components/schemas/data'
        dynos:
          $ref: '#/components/schemas/dynos'
        id:
          $ref: '#/components/schemas/id'
        month:
          $ref: '#/components/schemas/month'
        name:
          $ref: '#/components/schemas/name'
        partner:
          $ref: '#/components/schemas/partner'
        space:
          $ref: '#/components/schemas/space'
    app_usage_monthly:
      description: Usage for an app at a monthly resolution.
      type:
      - object
      properties:
        addons:
          $ref: '#/components/schemas/addons'
        app_name:
          $ref: '#/components/schemas/name'
        data:
          $ref: '#/components/schemas/data'
        dynos:
          $ref: '#/components/schemas/dynos'
        partner:
          $ref: '#/components/schemas/partner'
    connect:
      description: max connect rows synced
      readOnly: true
      type:
      - number
    month:
      description: year and month of the usage
      pattern: ^[0-9]{4}-[0-9]{2}$
      readOnly: true
      type:
      - string
    enterprise-account:
      description: Enterprise accounts allow companies to manage their development teams and billing.
      type:
      - object
      properties:
        id:
          $ref: '#/components/schemas/id'
        created_at:
          $ref: '#/components/schemas/created_at'
        name:
          $ref: '#/components/schemas/name'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        permissions:
          $ref: '#/components/schemas/permissions'
        trial:
          $ref: '#/components/schemas/trial'
        identity_provider:
          $ref: '#/components/schemas/identity_provider'
    trial:
      description: whether the enterprise account is a trial or not
      readOnly: true
      type:
      - boolean
    team-app:
      description: A team app encapsulates the team specific functionality of Heroku apps.
      type:
      - object
      properties:
        archived_at:
          $ref: '#/components/schemas/archived_at'
        buildpack_provided_description:
          $ref: '#/components/schemas/buildpack_provided_description'
        build_stack:
          description: identity of the stack that will be used for new builds
          properties:
            id:
              $ref: '#/components/schemas/id'
            name:
              $ref: '#/components/schemas/name'
          type:
          - object
        created_at:
          $ref: '#/components/schemas/created_at'
        git_url:
          $ref: '#/components/schemas/git_url'
        id:
          $ref: '#/components/schemas/id'
        internal_routing:
          $ref: '#/components/schemas/internal_routing'
        joined:
          $ref: '#/components/schemas/joined'
        locked:
          $ref: '#/components/schemas/locked'
        maintenance:
          $ref: '#/components/schemas/maintenance'
        name:
          $ref: '#/components/schemas/name'
        team:
          description: team that owns this app
          properties:
            name:
              $ref: '#/components/schemas/name'
          type:
          - 'null'
          - object
        owner:
          description: identity of app owner
          properties:
            email:
              $ref: '#/components/schemas/email'
            id:
              $ref: '#/components/schemas/id'
          type:
          - 'null'
          - object
        region:
          description: identity of app region
          properties:
            id:
              $ref: '#/components/schemas/id'
            name:
              $ref: '#/components/schemas/name'
          type:
          - object
        released_at:
          $ref: '#/components/schemas/released_at'
        repo_size:
          $ref: '#/components/schemas/repo_size'
        slug_size:
          $ref: '#/components/schemas/slug_size'
        space:
          description: identity of space
          properties:
            id:
              $ref: '#/components/schemas/id'
            name:
              $ref: '#/components/schemas/name'
          type:
          - 'null'
          - object
        stack:
          description: identity of app stack
          properties:
            id:
              $ref: '#/components/schemas/id'
            name:
              $ref: '#/components/schemas/name'
          type:
          - object
        updated_at:
          $ref: '#/components/schemas/updated_at'
        web_url:
          $ref: '#/components/schemas/web_url'
    archived_at:
      description: when app was archived
      format: date-time
      readOnly: true
      type:
      - 'null'
      - string
    buildpack_provided_description:
      description: description from buildpack of app
      readOnly: true
      type:
      - 'null'
      - string
    git_url:
      description: git repo URL of app
      pattern: ^https://git\.heroku\.com/[a-z][a-z0-9-]{2,29}\.git$
      readOnly: true
      type:
      - string
    internal_routing:
      default: false
      description: describes whether a Private Spaces app is externally routable or not
      readOnly: false
      type:
      - boolean
      - 'null'
    joined:
      default: false
      description: is the current member a collaborator on this app.
      type:
      - boolean
    locked:
      default: false
      description: are other team members forbidden from joining this app.
      type:
      - boolean
    maintenance:
      default: false
      description: maintenance status of app
      readOnly: false
      type:
      - boolean
    released_at:
      default: null
      description: when app was released
      format: date-time
      readOnly: true
      type:
      - 'null'
      - string
    repo_size:
      default: null
      description: git repo size in bytes of app
      readOnly: true
      type:
      - integer
      - 'null'
    slug_size:
      default: null
      description: slug size in bytes of app
      readOnly: true
      type:
      - integer
      - 'null'
    web_url:
      description: web URL of app
      format: uri
      pattern: ^https?://[a-z][a-z0-9-]{3,43}\.herokuapp\.com/$
      readOnly: true
      type:
      - 'null'
      - string
    filter:
      type:
      - object
      properties:
        in:
          $ref: '#/components/schemas/in'
    in:
      type:
      - object
      properties:
        id:
          $ref: '#/components/schemas/id'
    generation:
      description: A generation represents a version of the Heroku platform that includes the app execution environment, routing,
        telemetry, and build systems.
      type:
      - object
      properties:
        created_at:
          $ref: '#/components/schemas/created_at'
        id:
          $ref: '#/components/schemas/id'
        name:
          $ref: '#/components/schemas/name'
        updated_at:
          $ref: '#/components/schemas/updated_at'
    identity-provider:
      description: Identity Providers represent the SAML configuration of teams or an Enterprise account
      type:
      - object
      properties:
        certificate:
          $ref: '#/components/schemas/certificate'
        created_at:
          $ref: '#/components/schemas/created_at'
        entity_id:
          $ref: '#/components/schemas/entity_id'
        id:
          $ref: '#/components/schemas/id'
        slo_target_url:
          $ref: '#/components/schemas/slo_target_url'
        sso_target_url:
          $ref: '#/components/schemas/sso_target_url'
        organization:
          description: team associated with this identity provider
          properties:
            name:
              $ref: '#/components/schemas/name'
          type:
          - 'null'
          - object
        updated_at:
          $ref: '#/components/schemas/updated_at'
        owner:
          $ref: '#/components/schemas/owner'
    certificate:
      description: 'raw contents of the public certificate (eg: .crt or .pem file)'
      readOnly: false
      type:
      - string
    entity_id:
      description: URL identifier provided by the identity provider
      readOnly: false
      type:
      - string
    slo_target_url:
      description: single log out URL for this identity provider
      readOnly: false
      type:
      - string
    sso_target_url:
      description: single sign on URL for this identity provider
      readOnly: false
      type:
      - string
    inbound-ruleset:
      description: An inbound-ruleset is a collection of rules that specify what hosts can or cannot connect to an application.
      type:
      - object
      properties:
        id:
          $ref: '#/components/schemas/id'
        space:
          description: identity of space
          properties:
            id:
              $ref: '#/components/schemas/id'
            name:
              $ref: '#/components/schemas/name'
          type:
          - object
        created_at:
          $ref: '#/components/schemas/created_at'
        rules:
          type:
          - array
          items:
            $ref: '#/components/schemas/rule'
        created_by:
          $ref: '#/components/schemas/email'
    rule:
      description: the combination of an IP address in CIDR notation and whether to allow or deny it's traffic.
      type:
      - object
      properties:
        action:
          $ref: '#/components/schemas/action'
        source:
          $ref: '#/components/schemas/source'
      required:
      - source
      - action
    source:
      description: "is the request\xE2\u20AC\u2122s source in CIDR notation"
      pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
      readOnly: false
      type:
      - string
    invoice-address:
      description: An invoice address represents the address that should be listed on an invoice.
      type:
      - object
      properties:
        address_1:
          $ref: '#/components/schemas/address_1'
        address_2:
          $ref: '#/components/schemas/address_2'
        city:
          $ref: '#/components/schemas/city'
        country:
          $ref: '#/components/schemas/country'
        heroku_id:
          $ref: '#/components/schemas/identity'
        other:
          $ref: '#/components/schemas/other'
        postal_code:
          $ref: '#/components/schemas/postal_code'
        state:
          $ref: '#/components/schemas/state'
        use_invoice_address:
          $ref: '#/components/schemas/use_invoice_address'
    address_1:
      type:
      - string
      description: invoice street address line 1
    address_2:
      type:
      - string
      description: invoice street address line 2
    city:
      type:
      - string
      description: invoice city
    identity:
      anyOf:
      - $ref: '#/components/schemas/heroku_id'
    heroku_id:
      type:
      - string
      description: heroku_id identifier reference
      readOnly: true
    other:
      type:
      - string
      description: metadata / additional information to go on invoice
    postal_code:
      type:
      - string
      description: invoice zip code
    use_invoice_address:
      type:
      - boolean
      description: flag to use the invoice address for an account or not
      default: false
    invoice:
      description: An invoice is an itemized bill of goods for an account which includes pricing and charges.
      type:
      - object
      properties:
        charges_total:
          $ref: '#/components/schemas/charges_total'
        created_at:
          $ref: '#/components/schemas/created_at'
        credits_total:
          $ref: '#/components/schemas/credits_total'
        id:
          $ref: '#/components/schemas/id'
        number:
          $ref: '#/components/schemas/number'
        period_end:
          $ref: '#/components/schemas/period_end'
        period_start:
          $ref: '#/components/schemas/period_start'
        state:
          $ref: '#/components/schemas/state'
        total:
          $ref: '#/components/schemas/total'
        updated_at:
          $ref: '#/components/schemas/updated_at'
    charges_total:
      description: total charges on this invoice
      readOnly: true
      type:
      - number
    credits_total:
      description: total credits on this invoice
      readOnly: true
      type:
      - number
    number:
      description: human readable invoice number
      readOnly: true
      type:
      - integer
    period_end:
      description: the ending date that the invoice covers
      readOnly: true
      type:
      - string
    period_start:
      description: the starting date that this invoice covers
      readOnly: true
      type:
      - string
    total:
      description: combined total of charges and credits on this invoice
      readOnly: true
      type:
      - number
    password-reset:
      description: A password reset represents a in-process password reset attempt.
      type:
      - object
      properties:
        created_at:
          $ref: '#/components/schemas/created_at'
        user:
          properties:
            email:
              $ref: '#/components/schemas/email'
            id:
              $ref: '#/components/schemas/id'
          type:
          - object
    password:
      description: current password on the account
      readOnly: true
      type:
      - string
    password_confirmation:
      description: confirmation of the new password
      readOnly: true
      type:
      - string
    peering-info:
      description: '[Peering Info](https://devcenter.heroku.com/articles/private-space-peering) gives you the information
        necessary to peer an AWS VPC to a Private Space.'
      type:
      - object
      properties:
        aws_account_id:
          $ref: '#/components/schemas/aws_account_id'
        aws_region:
          $ref: '#/components/schemas/provider'
        vpc_id:
          $ref: '#/components/schemas/vpc_id'
        vpc_cidr:
          description: The CIDR range of the Private Space VPC
          $ref: '#/components/schemas/cidr'
        dyno_cidr_blocks:
          description: The CIDR ranges that should be routed to the Private Space VPC.
          type:
          - array
          items:
            $ref: '#/components/schemas/cidr'
        unavailable_cidr_blocks:
          description: The CIDR ranges that you must not conflict with.
          type:
          - array
          items:
            $ref: '#/components/schemas/cidr'
        space_cidr_blocks:
          description: The CIDR ranges that should be routed to the Private Space VPC.
          type:
          - array
          items:
            $ref: '#/components/schemas/cidr'
    aws_account_id:
      description: The AWS account ID of your Private Space.
      readOnly: true
      type:
      - string
    vpc_id:
      description: The AWS VPC ID of the peer.
      readOnly: true
      type:
      - string
    cidr:
      description: An IP address and the number of significant bits that make up the routing or networking portion.
      type:
      - string
    permission-entity:
      description: An owned entity including users' permissions.
      type:
      - object
      properties:
        id:
          $ref: '#/components/schemas/id'
        name:
          $ref: '#/components/schemas/name'
        team_id:
          $ref: '#/components/schemas/id'
        type:
          $ref: '#/components/schemas/type'
        users:
          description: Users that have access to the entity.
          items:
            type:
            - object
            properties:
              email:
                $ref: '#/components/schemas/email'
              id:
                $ref: '#/components/schemas/id'
              permissions:
                description: enterprise account permissions
                type:
                - array
                items:
                  type:
                  - string
          type:
          - array
    type:
      description: The type of object the entity is referring to.
      readOnly: true
      type:
      - string
      enum:
      - app
      - space
    pipeline-build:
      description: Information about the latest builds of apps in a pipeline. A build represents the process of transforming
        code into build artifacts.
      type:
      - object
      properties:
        app:
          description: app that the build belongs to
          properties:
            id:
              description: unique identifier of the app
              $ref: '#/components/schemas/id'
          type:
          - object
        buildpacks:
          $ref: '#/components/schemas/buildpacks'
        created_at:
          description: when the build was created
          $ref: '#/components/schemas/created_at'
        id:
          description: unique identifier of the build
          $ref: '#/components/schemas/id'
        output_stream_url:
          description: streaming URL of the build process output
          $ref: '#/components/schemas/output_stream_url'
        source_blob:
          description: location of gzipped tarball of source code used to create build
          properties:
            checksum:
              description: an optional checksum of the gzipped tarball for verifying its integrity
              readOnly: true
              type:
              - 'null'
              - string
            url:
              description: URL where gzipped tar archive of source code for build was downloaded.
              readOnly: true
              type:
              - string
            version:
              description: version of the gzipped tarball
              readOnly: true
              type:
              - string
              - 'null'
            version_description:
              description: version description of the gzipped tarball
              readOnly: true
              type:
              - string
              - 'null'
          type:
          - object
        release:
          properties:
            id:
              description: unique identifier of the release
              $ref: '#/components/schemas/id'
          $ref: '#/components/schemas/release'
        slug:
          description: slug created by this build
          properties:
            id:
              description: unique identifier of the slug
              $ref: '#/components/schemas/id'
          type:
          - object
          - 'null'
        stack:
          description: stack of the build
          $ref: '#/components/schemas/stack'
        status:
          description: status of the build
          $ref: '#/components/schemas/status'
        updated_at:
          description: when the build was updated
          $ref: '#/components/schemas/updated_at'
        user:
          description: user that started the build
          properties:
            id:
              $ref: '#/components/schemas/id'
            email:
              $ref: '#/components/schemas/email'
          type:
          - object
    buildpacks:
      description: buildpacks executed for this build, in order (only applicable to Cedar-generation apps)
      type:
      - array
      - 'null'
      items:
        description: Buildpack to execute in a build
        type:
        - object
        properties:
          url:
            description: the URL of the buildpack for the app
            readOnly: false
            type:
            - string
          name:
            description: Buildpack Registry name of the buildpack for the app
            readOnly: false
            type:
            - string
    output_stream_url:
      description: Build process output will be available from this URL as a stream. The stream is available as either `text/plain`
        or `text/event-stream`. Clients should be prepared to handle disconnects and can resume the stream by sending a `Range`
        header (for `text/plain`) or a `Last-Event-Id` header (for `text/event-stream`).
      readOnly: true
      type:
      - string
    release:
      description: release resulting from the build
      properties:
        id:
          $ref: '#/components/schemas/id'
      readOnly: true
      type:
      - 'null'
      - object
    stack:
      description: stack of build
      readOnly: true
      type:
      - string
    config_vars:
      additionalProperties: false
      description: hash of config vars
      patternProperties:
        ^[\w\.\:\[\]]+$:
          type:
          - string
          - 'null'
      type:
      - object
    pipeline-promotion-target:
      description: Promotion targets represent an individual app being promoted to
      type:
      - object
      properties:
        app:
          description: the app which was promoted to
          properties:
            id:
              $ref: '#/components/schemas/id'
          type:
          - object
        error_message:
          $ref: '#/components/schemas/error_message'
        id:
          $ref: '#/components/schemas/id'
        pipeline_promotion:
          description: the promotion which the target belongs to
          properties:
            id:
              $ref: '#/components/schemas/id'
          type:
          - object
        release:
          description: the release which was created on the target app
          properties:
            id:
              $ref: '#/components/schemas/id'
          type:
          - object
          - 'null'
        status:
          $ref: '#/components/schemas/status'
    error_message:
      description: an error message for why the promotion failed
      type:
      - 'null'
      - string
    pipeline-stack:
      description: A pipeline's stack is determined by the apps in the pipeline. This is used during creation of CI and Review
        Apps that have no stack defined in app.json
      type:
      - object
      properties:
        stack:
          description: identity of the stack that will be used for new builds without a stack defined in CI and Review Apps
          properties:
            id:
              $ref: '#/components/schemas/id'
            name:
              $ref: '#/components/schemas/name'
          type:
          - object
          - 'null'
    pipeline-transfer:
      description: A pipeline transfer is the process of changing pipeline ownership along with the contained apps.
      type:
      - object
      properties:
        pipeline:
          description: pipeline being transferred
          properties:
            id:
              $ref: '#/components/schemas/id'
          type:
          - object
        previous_owner:
          $ref: '#/components/schemas/previous_owner'
        new_owner:
          $ref: '#/components/schemas/new_owner'
    previous_owner:
      description: Previous owner of the pipeline.
      $ref: '#/components/schemas/owner'
      type:
      - object
    new_owner:
      description: New owner of the pipeline.
      $ref: '#/components/schemas/owner'
      type:
      - object
    rate-limit:
      description: Rate Limit represents the number of request tokens each account holds. Requests to this endpoint do not
        count towards the rate limit.
      type:
      - object
      properties:
        remaining:
          $ref: '#/components/schemas/remaining'
    remaining:
      description: allowed requests remaining in current interval
      readOnly: true
      type:
      - integer
    review-app:
      description: An ephemeral app to review a set of changes
      type:
      - object
      properties:
        app:
          description: the Heroku app associated to this review app
          properties:
            id:
              $ref: '#/components/schemas/id'
          type:
          - 'null'
          - object
        app_setup:
          description: the app setup for this review app
          properties:
            id:
              $ref: '#/components/schemas/id'
          type:
          - 'null'
          - object
        branch:
          $ref: '#/components/schemas/branch'
        created_at:
          $ref: '#/components/schemas/created_at'
        id:
          $ref: '#/components/schemas/id'
        pipeline:
          description: the pipeline which this review app belongs to
          properties:
            id:
              $ref: '#/components/schemas/id'
          type:
          - object
        status:
          $ref: '#/components/schemas/status'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        creator:
          $ref: '#/components/schemas/creator'
        wait_for_ci:
          $ref: '#/components/schemas/wait_for_ci'
        error_status:
          $ref: '#/components/schemas/error_status'
        message:
          $ref: '#/components/schemas/message'
        fork_repo:
          properties:
            id:
              $ref: '#/components/schemas/fork_repo_id'
          type:
          - object
          - 'null'
        pr_number:
          $ref: '#/components/schemas/pr_number'
    branch:
      description: the branch of the repository which the review app is based on
      readOnly: true
      type:
      - string
    creator:
      description: The user who created the review app
      readOnly: true
      type:
      - object
    wait_for_ci:
      description: wait for ci before building the app
      readOnly: true
      type:
      - boolean
    error_status:
      description: error message from creating the review app if any
      readOnly: true
      type:
      - string
      - 'null'
    message:
      description: message from creating the review app if any
      readOnly: true
      type:
      - string
      - 'null'
    fork_repo_id:
      description: repository id of the fork the branch resides in
      readOnly: true
      type:
      - integer
      - 'null'
    pr_number:
      description: pull request number the review app is built for
      readOnly: true
      type:
      - integer
      - 'null'
    source_blob:
      description: The download location for the review app's source code
      properties:
        url:
          description: URL where gzipped tar archive of source code for build was downloaded.
          readOnly: true
          type:
          - string
        version:
          description: The version number (or SHA) of the code to build.
          type:
          - string
          - 'null'
      type:
      - object
    review-app-config:
      description: Review apps can be configured for pipelines.
      type:
      - object
      properties:
        repo:
          properties:
            id:
              $ref: '#/components/schemas/repo_id'
          type:
          - object
        automatic_review_apps:
          $ref: '#/components/schemas/automatic_review_apps'
        deploy_target:
          $ref: '#/components/schemas/deploy_target'
        destroy_stale_apps:
          $ref: '#/components/schemas/destroy_stale_apps'
        stale_days:
          $ref: '#/components/schemas/stale_days'
        pipeline_id:
          $ref: '#/components/schemas/id'
        wait_for_ci:
          $ref: '#/components/schemas/wait_for_ci'
        base_name:
          $ref: '#/components/schemas/base_name'
    repo_id:
      description: repository id
      readOnly: true
      type:
      - integer
    automatic_review_apps:
      description: enable automatic review apps for pull requests
      readOnly: true
      type:
      - boolean
    deploy_target:
      description: the deploy target for the review apps of a pipeline
      properties:
        id:
          $ref: '#/components/schemas/deploy_target'
        type:
          $ref: '#/components/schemas/deploy_target'
      required:
      - id
      - type
      type:
      - object
      - 'null'
    destroy_stale_apps:
      description: automatically destroy review apps when they haven't been deployed for a number of days
      readOnly: true
      type:
      - boolean
    stale_days:
      description: number of days without a deployment after which to consider a review app stale
      readOnly: true
      type:
      - integer
    base_name:
      description: A unique prefix that will be used to create review app names
      readOnly: true
      type:
      - 'null'
      - string
    repo:
      description: repository name
      readOnly: true
      type:
      - string
    sms-number:
      description: SMS numbers are used for recovery on accounts with two-factor authentication enabled.
      type:
      - object
      properties:
        sms_number:
          $ref: '#/components/schemas/sms_number'
    sms_number:
      description: SMS number of account
      readOnly: true
      type:
      - string
      - 'null'
    space-app-access:
      description: Space access represents the permissions a particular user has on a particular space.
      type:
      - object
      properties:
        space:
          description: space user belongs to
          properties:
            name:
              $ref: '#/components/schemas/name'
            id:
              $ref: '#/components/schemas/id'
          type:
          - object
        created_at:
          $ref: '#/components/schemas/created_at'
        id:
          $ref: '#/components/schemas/id'
        permissions:
          description: user space permissions
          type:
          - array
          items:
            type:
            - object
            properties:
              description:
                type:
                - string
              name:
                type:
                - string
        updated_at:
          $ref: '#/components/schemas/updated_at'
        user:
          description: identity of user account
          properties:
            email:
              $ref: '#/components/schemas/email'
            id:
              $ref: '#/components/schemas/id'
          type:
          - object
    space-nat:
      description: Network address translation (NAT) for stable outbound IP addresses from a space
      type:
      - object
      properties:
        created_at:
          $ref: '#/components/schemas/created_at'
        sources:
          $ref: '#/components/schemas/sources'
        state:
          $ref: '#/components/schemas/state'
        updated_at:
          $ref: '#/components/schemas/updated_at'
    sources:
      description: potential IPs from which outbound network traffic will originate
      readOnly: true
      type:
      - array
      items:
        $ref: '#/components/schemas/ip_v4_address'
    ip_v4_address:
      format: ipv4
      pattern: ^(([01]?\d?\d|2[0-4]\d|25[0-5])\.){3}([01]?\d?\d|2[0-4]\d|25[0-5])$
      type:
      - string
    space-topology:
      description: Space Topology provides you with a mechanism for viewing all the running dynos, formations and applications
        for a space. This is the same data thats used to power our DNS Service Discovery.
      type:
      - object
      properties:
        version:
          $ref: '#/components/schemas/version'
        apps:
          description: The apps within this space
          type:
          - array
          readOnly: true
          items:
            type:
            - object
            properties:
              id:
                $ref: '#/components/schemas/id'
                readOnly: true
              domains:
                readOnly: true
                type:
                - array
              formation:
                description: formations for application
                items:
                  $ref: '#/components/schemas/formation'
                type:
                - array
                readOnly: true
    formation:
      description: formations for application
      properties:
        id:
          $ref: '#/components/schemas/id'
        process_type:
          description: Name of process type
          type:
          - string
        dynos:
          description: Current dynos for application
          items:
            $ref: '#/components/schemas/dyno'
          type:
          - array
      type:
      - object
    dyno:
      description: A dyno
      properties:
        id:
          $ref: '#/components/schemas/id'
        number:
          description: process number, e.g. 1 in web.1
          type:
          - integer
        private_ip:
          description: RFC1918 Address of Dyno
          type:
          - string
        hostname:
          description: localspace hostname of resource
          type:
          - string
      type:
      - object
    add-on:
      description: Add-ons represent add-ons that have been provisioned and attached to one or more apps.
      additionalProperties: false
      required:
      - actions
      - addon_service
      - billing_entity
      - app
      - billed_price
      - config_vars
      - created_at
      - id
      - name
      - plan
      - provider_id
      - state
      - updated_at
      - web_url
      type:
      - object
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        addon_service:
          $ref: '#/components/schemas/addon_service'
        billing_entity:
          description: billing entity associated with this add-on
          type:
          - object
          properties:
            id:
              description: unique identifier of the billing entity
              format: uuid
              readOnly: true
              type:
              - string
            name:
              description: name of the billing entity
              readOnly: true
              type:
              - string
            type:
              description: type of Object of the billing entity; new types allowed at any time.
              enum:
              - app
              - team
              readOnly: true
              type:
              - string
        app:
          description: billing application associated with this add-on
          type:
          - object
          properties:
            id:
              $ref: '#/components/schemas/id'
            name:
              $ref: '#/components/schemas/name'
        billed_price:
          description: billed price
          properties:
            cents:
              $ref: '#/components/schemas/cents'
            contract:
              $ref: '#/components/schemas/contract'
            unit:
              $ref: '#/components/schemas/unit'
          type:
          - object
          - 'null'
        config_vars:
          $ref: '#/components/schemas/config_vars'
        created_at:
          $ref: '#/components/schemas/created_at'
        id:
          $ref: '#/components/schemas/id'
        name:
          $ref: '#/components/schemas/name'
        plan:
          $ref: '#/components/schemas/plan'
        provider_id:
          $ref: '#/components/schemas/provider_id'
        provision_message:
          $ref: '#/components/schemas/provision_message'
        state:
          $ref: '#/components/schemas/state'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        web_url:
          $ref: '#/components/schemas/web_url'
    actions:
      description: provider actions for this specific add-on
      type:
      - array
      items:
        type:
        - object
      readOnly: true
      properties:
        id:
          $ref: '#/components/schemas/id'
        label:
          $ref: '#/components/schemas/label'
        action:
          $ref: '#/components/schemas/action'
        url:
          $ref: '#/components/schemas/url'
        requires_owner:
          $ref: '#/components/schemas/requires_owner'
    label:
      description: the display text shown in Dashboard
      readOnly: true
      type:
      - string
    requires_owner:
      description: if the action requires the user to own the app
      readOnly: true
      type:
      - boolean
    addon_service:
      description: identity of add-on service
      anyOf:
      - properties:
          id:
            $ref: '#/components/schemas/id'
          name:
            $ref: '#/components/schemas/name'
        strictProperties: true
        type:
        - object
      - $ref: '#/components/schemas/add-on-service'
    cents:
      description: price in cents per unit of plan
      readOnly: true
      type:
      - integer
    contract:
      description: price is negotiated in a contract outside of monthly add-on billing
      readOnly: true
      type:
      - boolean
    unit:
      description: unit of price for plan
      readOnly: true
      type:
      - string
    plan:
      description: identity of add-on plan
      anyOf:
      - properties:
          id:
            $ref: '#/components/schemas/id'
          name:
            $ref: '#/components/schemas/name'
        strictProperties: true
        type:
        - object
      - $ref: '#/components/schemas/plan'
    provider_id:
      description: id of this add-on with its provider
      readOnly: true
      type:
      - string
    provision_message:
      description: A provision message
      readOnly: true
      type:
      - string
    team-app-permission:
      description: A team app permission is a behavior that is assigned to a user in a team app.
      type:
      - object
      properties:
        name:
          $ref: '#/components/schemas/name'
        description:
          $ref: '#/components/schemas/description'
    team-daily-usage:
      description: Usage for an enterprise team at a daily resolution.
      type:
      - object
      properties:
        addons:
          $ref: '#/components/schemas/addons'
        apps:
          description: app usage in the team
          type:
          - array
          items:
            $ref: '#/components/schemas/app_usage_daily'
        data:
          $ref: '#/components/schemas/data'
        date:
          $ref: '#/components/schemas/date'
        dynos:
          $ref: '#/components/schemas/dynos'
        id:
          $ref: '#/components/schemas/id'
        name:
          $ref: '#/components/schemas/name'
        partner:
          $ref: '#/components/schemas/partner'
        space:
          $ref: '#/components/schemas/space'
    team-delinquency:
      description: A Heroku team becomes delinquent due to non-payment. We [suspend and delete](https://help.heroku.com/EREVRILX/what-happens-if-i-have-unpaid-heroku-invoices)
        delinquent teams if their invoices remain unpaid.
      type:
      - object
      properties:
        scheduled_suspension_time:
          $ref: '#/components/schemas/scheduled_suspension_time'
        scheduled_deletion_time:
          $ref: '#/components/schemas/scheduled_deletion_time'
    team-invoice:
      description: A Team Invoice is an itemized bill of goods for a team which includes pricing and charges.
      type:
      - object
      properties:
        addons_total:
          $ref: '#/components/schemas/addons_total'
        database_total:
          $ref: '#/components/schemas/database_total'
        charges_total:
          $ref: '#/components/schemas/charges_total'
        created_at:
          $ref: '#/components/schemas/created_at'
        credits_total:
          $ref: '#/components/schemas/credits_total'
        dyno_units:
          $ref: '#/components/schemas/dyno_units'
        id:
          $ref: '#/components/schemas/id'
        number:
          $ref: '#/components/schemas/number'
        payment_status:
          $ref: '#/components/schemas/payment_status'
        period_end:
          $ref: '#/components/schemas/period_end'
        period_start:
          $ref: '#/components/schemas/period_start'
        platform_total:
          $ref: '#/components/schemas/platform_total'
        state:
          $ref: '#/components/schemas/state'
        total:
          $ref: '#/components/schemas/total'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        weighted_dyno_hours:
          $ref: '#/components/schemas/weighted_dyno_hours'
    addons_total:
      description: total add-ons charges in on this invoice
      readOnly: true
      type:
      - integer
    database_total:
      description: total database charges on this invoice
      readOnly: true
      type:
      - integer
    dyno_units:
      description: total amount of dyno units consumed across dyno types.
      readOnly: true
      type:
      - number
    payment_status:
      description: status of the invoice payment
      readOnly: true
      type:
      - string
    platform_total:
      description: total platform charges on this invoice
      readOnly: true
      type:
      - integer
    weighted_dyno_hours:
      description: The total amount of hours consumed across dyno types.
      readOnly: true
      type:
      - number
    team-monthly-usage:
      description: Usage for an enterprise team at a monthly resolution.
      type:
      - object
      properties:
        addons:
          $ref: '#/components/schemas/addons'
        apps:
          description: app usage in the team
          type:
          - array
          items:
            $ref: '#/components/schemas/app_usage_monthly'
        connect:
          $ref: '#/components/schemas/connect'
        data:
          $ref: '#/components/schemas/data'
        dynos:
          $ref: '#/components/schemas/dynos'
        id:
          $ref: '#/components/schemas/id'
        month:
          $ref: '#/components/schemas/month'
        name:
          $ref: '#/components/schemas/name'
        partner:
          $ref: '#/components/schemas/partner'
        space:
          $ref: '#/components/schemas/space'
    team-preferences:
      description: Tracks a Team's Preferences
      type:
      - object
      properties:
        default-permission:
          $ref: '#/components/schemas/default-permission'
        addons-controls:
          $ref: '#/components/schemas/addons-controls'
    default-permission:
      description: The default permission used when adding new members to the team
      readOnly: false
      enum:
      - admin
      - member
      - viewer
      - null
      type:
      - 'null'
      - string
    addons-controls:
      description: Whether add-on service rules should be applied to add-on installations
      readOnly: false
      type:
      - boolean
      - 'null'
    telemetry-drain:
      description: A telemetry drain forwards OpenTelemetry traces, metrics, and logs to your own consumer. For Fir-generation
        apps only.
      type:
      - object
      properties:
        created_at:
          $ref: '#/components/schemas/created_at'
        id:
          $ref: '#/components/schemas/id'
        owner:
          $ref: '#/components/schemas/owner'
        signals:
          $ref: '#/components/schemas/signals'
        exporter:
          $ref: '#/components/schemas/exporter'
        updated_at:
          $ref: '#/components/schemas/updated_at'
    signals:
      description: OpenTelemetry signals to send to telemetry drain
      readOnly: false
      minItems: 1
      uniqueItems: true
      type:
      - array
      items:
        $ref: '#/components/schemas/signal'
    signal:
      description: OpenTelemetry signal to be sent to the telemetry drain
      readOnly: true
      type:
      - string
      enum:
      - traces
      - metrics
      - logs
    exporter:
      description: OpenTelemetry exporter configuration
      readOnly: false
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/exporter_type'
        endpoint:
          $ref: '#/components/schemas/exporter_endpoint'
        headers:
          $ref: '#/components/schemas/exporter_headers'
      required:
      - type
      - endpoint
      type:
      - object
    exporter_type:
      description: the transport type to be used for your OpenTelemetry consumer
      readOnly: true
      type:
      - string
      enum:
      - otlphttp
      - otlp
    exporter_endpoint:
      description: URI of your OpenTelemetry consumer
      readOnly: false
      maxLength: 1000
      type:
      - string
    exporter_headers:
      description: JSON headers to send to your OpenTelemetry consumer
      readOnly: false
      default: {}
      additionalProperties: false
      maxItems: 20
      patternProperties:
        ^[A-Za-z0-9\-_]{1,100}$:
          maxLength: 1000
          type:
          - string
      type:
      - object
    test-case:
      description: A single test case belonging to a test run
      type:
      - object
      properties:
        id:
          $ref: '#/components/schemas/id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        description:
          $ref: '#/components/schemas/description'
        diagnostic:
          $ref: '#/components/schemas/diagnostic'
        directive:
          $ref: '#/components/schemas/directive'
        passed:
          $ref: '#/components/schemas/passed'
        number:
          $ref: '#/components/schemas/number'
        test_node:
          description: the test node which executed this test case
          properties:
            id:
              $ref: '#/components/schemas/identity'
          type:
          - object
        test_run:
          description: the test run which owns this test case
          properties:
            id:
              $ref: '#/components/schemas/identity'
          type:
          - object
    diagnostic:
      description: meta information about the test case
      type:
      - string
    directive:
      description: special note about the test case e.g. skipped, todo
      type:
      - string
    passed:
      description: whether the test case was successful
      type:
      - boolean
    test-node:
      description: A single test node belonging to a test run
      type:
      - object
      properties:
        created_at:
          $ref: '#/components/schemas/created_at'
        dyno:
          description: the dyno which belongs to this test node
          properties:
            id:
              $ref: '#/components/schemas/identity'
            attach_url:
              $ref: '#/components/schemas/attach_url'
          type:
          - object
          - 'null'
        error_status:
          $ref: '#/components/schemas/error_status'
        exit_code:
          $ref: '#/components/schemas/exit_code'
        id:
          $ref: '#/components/schemas/identity'
        index:
          $ref: '#/components/schemas/index'
        message:
          $ref: '#/components/schemas/message'
        output_stream_url:
          $ref: '#/components/schemas/output_stream_url'
        pipeline:
          description: the pipeline which owns this test node
          properties:
            id:
              $ref: '#/components/schemas/identity'
          type:
          - object
        setup_stream_url:
          $ref: '#/components/schemas/setup_stream_url'
        status:
          $ref: '#/components/schemas/status'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        test_run:
          description: the test run which owns this test node
          properties:
            id:
              $ref: '#/components/schemas/identity'
          type:
          - object
    attach_url:
      description: a URL to stream output from for debug runs or null for non-debug runs
      readOnly: true
      type:
      - string
      - 'null'
    exit_code:
      description: the exit code of the test script
      type:
      - integer
      - 'null'
    index:
      description: The index of the test node
      type:
      - integer
    setup_stream_url:
      description: the streaming test setup output for the test node
      type:
      - string
    commit_branch:
      description: the branch of the repository that the test run concerns
      type:
      - string
    commit_message:
      description: the message for the commit under test
      type:
      - string
    commit_sha:
      description: the SHA hash of the commit under test
      type:
      - string
    debug:
      description: whether the test run was started for interactive debugging
      type:
      - boolean
    source_blob_url:
      description: The download location for the source code to be tested
      type:
      - string
    test-run:
      description: An execution or trial of one or more tests
      type:
      - object
      properties:
        actor_email:
          $ref: '#/components/schemas/actor_email'
        clear_cache:
          $ref: '#/components/schemas/clear_cache'
        commit_branch:
          $ref: '#/components/schemas/commit_branch'
        commit_message:
          $ref: '#/components/schemas/commit_message'
        commit_sha:
          $ref: '#/components/schemas/commit_sha'
        debug:
          $ref: '#/components/schemas/debug'
        app_setup:
          $ref: '#/components/schemas/app_setup'
        created_at:
          $ref: '#/components/schemas/created_at'
        dyno:
          description: the type of dynos used for this test-run
          properties:
            size:
              $ref: '#/components/schemas/size'
          type:
          - 'null'
          - object
        id:
          $ref: '#/components/schemas/id'
        message:
          $ref: '#/components/schemas/message'
        number:
          $ref: '#/components/schemas/number'
        organization:
          description: the team that owns this test-run
          properties:
            name:
              $ref: '#/components/schemas/name'
          type:
          - 'null'
          - object
        pipeline:
          description: the pipeline which owns this test-run
          properties:
            id:
              $ref: '#/components/schemas/identity'
          type:
          - object
        status:
          $ref: '#/components/schemas/status'
        source_blob_url:
          $ref: '#/components/schemas/source_blob_url'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        user:
          $ref: '#/components/schemas/account'
        warning_message:
          $ref: '#/components/schemas/warning_message'
    actor_email:
      description: the email of the actor triggering the test run
      type:
      - string
      format: email
    clear_cache:
      description: whether the test was run with an empty cache
      type:
      - boolean
      - 'null'
    app_setup:
      description: the app setup for the test run
      type:
      - 'null'
      - object
    size:
      description: dyno size
      readOnly: false
      type:
      - string
    account:
      description: An account represents an individual signed up to use the Heroku platform.
      type:
      - object
      properties:
        allow_tracking:
          $ref: '#/components/schemas/allow_tracking'
        beta:
          $ref: '#/components/schemas/beta'
        created_at:
          $ref: '#/components/schemas/created_at'
        email:
          $ref: '#/components/schemas/email'
        federated:
          $ref: '#/components/schemas/federated'
        id:
          $ref: '#/components/schemas/id'
        identity_provider:
          description: Identity Provider details for federated users.
          properties:
            id:
              $ref: '#/components/schemas/id'
            name:
              $ref: '#/components/schemas/name'
            team:
              type:
              - object
              properties:
                name:
                  $ref: '#/components/schemas/name'
            organization:
              type:
              - object
              properties:
                name:
                  $ref: '#/components/schemas/name'
            owner:
              $ref: '#/components/schemas/owner'
          type:
          - object
          - 'null'
        last_login:
          $ref: '#/components/schemas/last_login'
        name:
          $ref: '#/components/schemas/name'
        sms_number:
          $ref: '#/components/schemas/sms_number'
        suspended_at:
          $ref: '#/components/schemas/suspended_at'
        delinquent_at:
          $ref: '#/components/schemas/delinquent_at'
        two_factor_authentication:
          $ref: '#/components/schemas/two_factor_authentication'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        verified:
          $ref: '#/components/schemas/verified'
        country_of_residence:
          $ref: '#/components/schemas/country_of_residence'
        default_organization:
          description: team selected by default
          properties:
            id:
              $ref: '#/components/schemas/id'
            name:
              $ref: '#/components/schemas/name'
          type:
          - object
          - 'null'
        default_team:
          description: team selected by default
          properties:
            id:
              $ref: '#/components/schemas/id'
            name:
              $ref: '#/components/schemas/name'
          type:
          - object
          - 'null'
    allow_tracking:
      default: true
      description: whether to allow third party web activity tracking
      readOnly: false
      type:
      - boolean
    beta:
      default: false
      description: whether allowed to utilize beta Heroku features
      readOnly: false
      type:
      - boolean
    federated:
      description: whether the user is federated and belongs to an Identity Provider
      readOnly: true
      type:
      - boolean
    last_login:
      description: when account last authorized with Heroku
      format: date-time
      readOnly: true
      type:
      - string
      - 'null'
    suspended_at:
      description: when account was suspended
      format: date-time
      readOnly: true
      type:
      - string
      - 'null'
    delinquent_at:
      description: when account became delinquent
      format: date-time
      readOnly: true
      type:
      - string
      - 'null'
    verified:
      default: false
      description: whether account has been verified with billing information
      readOnly: true
      type:
      - boolean
    country_of_residence:
      description: country where account owner resides
      readOnly: false
      type:
      - string
      - 'null'
    warning_message:
      description: human friently warning emitted during the test run
      type:
      - string
      - 'null'
    user-preferences:
      description: Tracks a user's preferences and message dismissals
      type:
      - object
      properties:
        timezone:
          $ref: '#/components/schemas/timezone'
        default-organization:
          $ref: '#/components/schemas/default-organization'
        dismissed-github-banner:
          $ref: '#/components/schemas/dismissed-github-banner'
        dismissed-getting-started:
          $ref: '#/components/schemas/dismissed-getting-started'
        dismissed-org-access-controls:
          $ref: '#/components/schemas/dismissed-org-access-controls'
        dismissed-org-wizard-notification:
          $ref: '#/components/schemas/dismissed-org-wizard-notification'
        dismissed-pipelines-banner:
          $ref: '#/components/schemas/dismissed-pipelines-banner'
        dismissed-pipelines-github-banner:
          $ref: '#/components/schemas/dismissed-pipelines-github-banner'
        dismissed-pipelines-github-banners:
          $ref: '#/components/schemas/dismissed-pipelines-github-banners'
        dismissed-sms-banner:
          $ref: '#/components/schemas/dismissed-sms-banner'
    timezone:
      description: User's default timezone
      readOnly: false
      type:
      - string
      - 'null'
    default-organization:
      description: User's default team
      readOnly: false
      type:
      - string
      - 'null'
    dismissed-github-banner:
      description: Whether the user has dismissed the GitHub link banner
      readOnly: false
      type:
      - boolean
      - 'null'
    dismissed-getting-started:
      description: Whether the user has dismissed the getting started banner
      readOnly: false
      type:
      - boolean
      - 'null'
    dismissed-org-access-controls:
      description: Whether the user has dismissed the Organization Access Controls banner
      readOnly: false
      type:
      - boolean
      - 'null'
    dismissed-org-wizard-notification:
      description: Whether the user has dismissed the Organization Wizard
      readOnly: false
      type:
      - boolean
      - 'null'
    dismissed-pipelines-banner:
      description: Whether the user has dismissed the Pipelines banner
      readOnly: false
      type:
      - boolean
      - 'null'
    dismissed-pipelines-github-banner:
      description: Whether the user has dismissed the GitHub banner on a pipeline overview
      readOnly: false
      type:
      - boolean
      - 'null'
    dismissed-pipelines-github-banners:
      description: Which pipeline uuids the user has dismissed the GitHub banner for
      readOnly: false
      type:
      - 'null'
      - array
      items:
        $ref: '#/components/schemas/id'
    dismissed-sms-banner:
      description: Whether the user has dismissed the 2FA SMS banner
      readOnly: false
      type:
      - boolean
      - 'null'
  securitySchemes:
    herokuAuth:
      type: http
      scheme: bearer
      bearerFormat: API Key
  x-stackQL-resources:
    account-delinquency:
      id: heroku.misc.account-delinquency
      name: account-delinquency
      title: Account Delinquency
      methods:
        Info:
          operation:
            $ref: '#/paths/~1account~1delinquency/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/account-delinquency/methods/Info'
        insert: []
        update: []
        delete: []
        exec: []
    add-on-region-capability:
      id: heroku.misc.add-on-region-capability
      name: add-on-region-capability
      title: Add On Region Capability
      methods:
        List:
          operation:
            $ref: '#/paths/~1addon-region-capabilities/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ListByAddOnService:
          operation:
            $ref: '#/paths/~1addon-services~1{add_on_service_identity}~1region-capabilities/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ListByRegion:
          operation:
            $ref: '#/paths/~1regions~1{region_identity}~1addon-region-capabilities/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/add-on-region-capability/methods/List'
        - $ref: '#/components/x-stackQL-resources/add-on-region-capability/methods/ListByAddOnService'
        - $ref: '#/components/x-stackQL-resources/add-on-region-capability/methods/ListByRegion'
        insert: []
        update: []
        delete: []
        exec: []
    add-on-webhook-delivery:
      id: heroku.misc.add-on-webhook-delivery
      name: add-on-webhook-delivery
      title: Add On Webhook Delivery
      methods:
        Info:
          operation:
            $ref: '#/paths/~1addons~1{add_on_identity}~1webhook-deliveries~1{app_webhook_delivery_identity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        List:
          operation:
            $ref: '#/paths/~1addons~1{add_on_identity}~1webhook-deliveries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/add-on-webhook-delivery/methods/Info'
        - $ref: '#/components/x-stackQL-resources/add-on-webhook-delivery/methods/List'
        insert: []
        update: []
        delete: []
        exec: []
    add-on-webhook-event:
      id: heroku.misc.add-on-webhook-event
      name: add-on-webhook-event
      title: Add On Webhook Event
      methods:
        Info:
          operation:
            $ref: '#/paths/~1addons~1{add_on_identity}~1webhook-events~1{app_webhook_event_identity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        List:
          operation:
            $ref: '#/paths/~1addons~1{add_on_identity}~1webhook-events/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/add-on-webhook-event/methods/Info'
        - $ref: '#/components/x-stackQL-resources/add-on-webhook-event/methods/List'
        insert: []
        update: []
        delete: []
        exec: []
    add-on-webhook:
      id: heroku.misc.add-on-webhook
      name: add-on-webhook
      title: Add On Webhook
      methods:
        Create:
          operation:
            $ref: '#/paths/~1addons~1{add_on_identity}~1webhooks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        List:
          operation:
            $ref: '#/paths/~1addons~1{add_on_identity}~1webhooks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Delete:
          operation:
            $ref: '#/paths/~1addons~1{add_on_identity}~1webhooks~1{app_webhook_identity}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Info:
          operation:
            $ref: '#/paths/~1addons~1{add_on_identity}~1webhooks~1{app_webhook_identity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Update:
          operation:
            $ref: '#/paths/~1addons~1{add_on_identity}~1webhooks~1{app_webhook_identity}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/add-on-webhook/methods/List'
        - $ref: '#/components/x-stackQL-resources/add-on-webhook/methods/Info'
        insert:
        - $ref: '#/components/x-stackQL-resources/add-on-webhook/methods/Create'
        update:
        - $ref: '#/components/x-stackQL-resources/add-on-webhook/methods/Update'
        delete:
        - $ref: '#/components/x-stackQL-resources/add-on-webhook/methods/Delete'
        exec: []
    archive:
      id: heroku.misc.archive
      name: archive
      title: Archive
      methods:
        Info:
          operation:
            $ref: '#/paths/~1enterprise-accounts~1{enterprise_account_identity}~1archives~1{archive_year}~1{archive_month}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        List:
          operation:
            $ref: '#/paths/~1enterprise-accounts~1{enterprise_account_identity}~1archives/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/archive/methods/Info'
        - $ref: '#/components/x-stackQL-resources/archive/methods/List'
        insert: []
        update: []
        delete: []
        exec: []
    audit-trail-event:
      id: heroku.misc.audit-trail-event
      name: audit-trail-event
      title: Audit Trail Event
      methods:
        List:
          operation:
            $ref: '#/paths/~1enterprise-accounts~1{enterprise_account_identity}~1events/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/audit-trail-event/methods/List'
        insert: []
        update: []
        delete: []
        exec: []
    credit:
      id: heroku.misc.credit
      name: credit
      title: Credit
      methods:
        Create:
          operation:
            $ref: '#/paths/~1account~1credits/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        List:
          operation:
            $ref: '#/paths/~1account~1credits/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Info:
          operation:
            $ref: '#/paths/~1account~1credits~1{credit_identity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/credit/methods/List'
        - $ref: '#/components/x-stackQL-resources/credit/methods/Info'
        insert:
        - $ref: '#/components/x-stackQL-resources/credit/methods/Create'
        update: []
        delete: []
        exec: []
    enterprise-account-daily-usage:
      id: heroku.misc.enterprise-account-daily-usage
      name: enterprise-account-daily-usage
      title: Enterprise Account Daily Usage
      methods:
        Info:
          operation:
            $ref: '#/paths/~1enterprise-accounts~1{enterprise_account_id}~1usage~1daily/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/enterprise-account-daily-usage/methods/Info'
        insert: []
        update: []
        delete: []
        exec: []
    enterprise-account-member:
      id: heroku.misc.enterprise-account-member
      name: enterprise-account-member
      title: Enterprise Account Member
      methods:
        List:
          operation:
            $ref: '#/paths/~1enterprise-accounts~1{enterprise_account_identity}~1members/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Create:
          operation:
            $ref: '#/paths/~1enterprise-accounts~1{enterprise_account_identity}~1members/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Update:
          operation:
            $ref: '#/paths/~1enterprise-accounts~1{enterprise_account_identity}~1members~1{enterprise_account_member_user_identity}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Delete:
          operation:
            $ref: '#/paths/~1enterprise-accounts~1{enterprise_account_identity}~1members~1{enterprise_account_member_user_identity}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/enterprise-account-member/methods/List'
        insert:
        - $ref: '#/components/x-stackQL-resources/enterprise-account-member/methods/Create'
        update:
        - $ref: '#/components/x-stackQL-resources/enterprise-account-member/methods/Update'
        delete:
        - $ref: '#/components/x-stackQL-resources/enterprise-account-member/methods/Delete'
        exec: []
    enterprise-account-monthly-usage:
      id: heroku.misc.enterprise-account-monthly-usage
      name: enterprise-account-monthly-usage
      title: Enterprise Account Monthly Usage
      methods:
        Info:
          operation:
            $ref: '#/paths/~1enterprise-accounts~1{enterprise_account_id}~1usage~1monthly/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/enterprise-account-monthly-usage/methods/Info'
        insert: []
        update: []
        delete: []
        exec: []
    enterprise-account:
      id: heroku.misc.enterprise-account
      name: enterprise-account
      title: Enterprise Account
      methods:
        List:
          operation:
            $ref: '#/paths/~1enterprise-accounts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Info:
          operation:
            $ref: '#/paths/~1enterprise-accounts~1{enterprise_account_identity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Update:
          operation:
            $ref: '#/paths/~1enterprise-accounts~1{enterprise_account_identity}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/enterprise-account/methods/List'
        - $ref: '#/components/x-stackQL-resources/enterprise-account/methods/Info'
        insert: []
        update: []
        delete: []
        exec:
        - $ref: '#/components/x-stackQL-resources/enterprise-account/methods/Update'
    filter-apps:
      id: heroku.misc.filter-apps
      name: filter-apps
      title: Filter Apps
      methods:
        Apps:
          operation:
            $ref: '#/paths/~1filters~1apps/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/filter-apps/methods/Apps'
        insert: []
        update: []
        delete: []
        exec: []
    generation:
      id: heroku.misc.generation
      name: generation
      title: Generation
      methods:
        Info:
          operation:
            $ref: '#/paths/~1generations~1{stack_identity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        List:
          operation:
            $ref: '#/paths/~1generations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ListByTeam:
          operation:
            $ref: '#/paths/~1teams~1{team_identity}~1available-generations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/generation/methods/Info'
        - $ref: '#/components/x-stackQL-resources/generation/methods/List'
        - $ref: '#/components/x-stackQL-resources/generation/methods/ListByTeam'
        insert: []
        update: []
        delete: []
        exec: []
    identity-provider:
      id: heroku.misc.identity-provider
      name: identity-provider
      title: Identity Provider
      methods:
        ListByTeam:
          operation:
            $ref: '#/paths/~1teams~1{team_name}~1identity-providers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        CreateByTeam:
          operation:
            $ref: '#/paths/~1teams~1{team_name}~1identity-providers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        UpdateByTeam:
          operation:
            $ref: '#/paths/~1teams~1{team_name}~1identity-providers~1{identity_provider_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DeleteByTeam:
          operation:
            $ref: '#/paths/~1teams~1{team_name}~1identity-providers~1{identity_provider_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/identity-provider/methods/ListByTeam'
        insert:
        - $ref: '#/components/x-stackQL-resources/identity-provider/methods/CreateByTeam'
        update:
        - $ref: '#/components/x-stackQL-resources/identity-provider/methods/UpdateByTeam'
        delete:
        - $ref: '#/components/x-stackQL-resources/identity-provider/methods/DeleteByTeam'
        exec: []
    inbound-ruleset:
      id: heroku.misc.inbound-ruleset
      name: inbound-ruleset
      title: Inbound Ruleset
      methods:
        Current:
          operation:
            $ref: '#/paths/~1spaces~1{space_identity}~1inbound-ruleset/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Create:
          operation:
            $ref: '#/paths/~1spaces~1{space_identity}~1inbound-ruleset/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Info:
          operation:
            $ref: '#/paths/~1spaces~1{space_identity}~1inbound-rulesets~1{inbound_ruleset_identity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        List:
          operation:
            $ref: '#/paths/~1spaces~1{space_identity}~1inbound-rulesets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/inbound-ruleset/methods/Current'
        - $ref: '#/components/x-stackQL-resources/inbound-ruleset/methods/Info'
        - $ref: '#/components/x-stackQL-resources/inbound-ruleset/methods/List'
        insert:
        - $ref: '#/components/x-stackQL-resources/inbound-ruleset/methods/Create'
        update: []
        delete: []
        exec: []
    invoice-address:
      id: heroku.misc.invoice-address
      name: invoice-address
      title: Invoice Address
      methods:
        Info:
          operation:
            $ref: '#/paths/~1account~1invoice-address/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Update:
          operation:
            $ref: '#/paths/~1account~1invoice-address/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/invoice-address/methods/Info'
        - $ref: '#/components/x-stackQL-resources/invoice-address/methods/Update'
        insert: []
        update: []
        delete: []
        exec: []
    invoice:
      id: heroku.misc.invoice
      name: invoice
      title: Invoice
      methods:
        Info:
          operation:
            $ref: '#/paths/~1account~1invoices~1{invoice_identity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        List:
          operation:
            $ref: '#/paths/~1account~1invoices/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/invoice/methods/Info'
        - $ref: '#/components/x-stackQL-resources/invoice/methods/List'
        insert: []
        update: []
        delete: []
        exec: []
    password-reset:
      id: heroku.misc.password-reset
      name: password-reset
      title: Password Reset
      methods:
        ResetPassword:
          operation:
            $ref: '#/paths/~1password-resets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        CompleteResetPassword:
          operation:
            $ref: '#/paths/~1password-resets~1{password_reset_reset_password_token}~1actions~1finalize/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/password-reset/methods/ResetPassword'
        - $ref: '#/components/x-stackQL-resources/password-reset/methods/CompleteResetPassword'
        insert: []
        update: []
        delete: []
        exec: []
    peering-info:
      id: heroku.misc.peering-info
      name: peering-info
      title: Peering Info
      methods:
        Info:
          operation:
            $ref: '#/paths/~1spaces~1{space_identity}~1peering-info/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/peering-info/methods/Info'
        insert: []
        update: []
        delete: []
        exec: []
    permission-entity:
      id: heroku.misc.permission-entity
      name: permission-entity
      title: Permission Entity
      methods:
        List:
          operation:
            $ref: '#/paths/~1teams~1{team_identity}~1permissions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/permission-entity/methods/List'
        insert: []
        update: []
        delete: []
        exec: []
    pipeline-build:
      id: heroku.misc.pipeline-build
      name: pipeline-build
      title: Pipeline Build
      methods:
        List:
          operation:
            $ref: '#/paths/~1pipelines~1{pipeline_id}~1latest-builds/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/pipeline-build/methods/List'
        insert: []
        update: []
        delete: []
        exec: []
    pipeline-config-var:
      id: heroku.misc.pipeline-config-var
      name: pipeline-config-var
      title: Pipeline Config Var
      methods:
        InfoForApp:
          operation:
            $ref: '#/paths/~1pipelines~1{pipeline_id}~1stage~1{pipeline_coupling_stage}~1config-vars/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Update:
          operation:
            $ref: '#/paths/~1pipelines~1{pipeline_id}~1stage~1{pipeline_coupling_stage}~1config-vars/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/pipeline-config-var/methods/InfoForApp'
        insert: []
        update:
        - $ref: '#/components/x-stackQL-resources/pipeline-config-var/methods/Update'
        delete: []
        exec: []
    pipeline-promotion-target:
      id: heroku.misc.pipeline-promotion-target
      name: pipeline-promotion-target
      title: Pipeline Promotion Target
      methods:
        List:
          operation:
            $ref: '#/paths/~1pipeline-promotions~1{pipeline_promotion_id}~1promotion-targets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/pipeline-promotion-target/methods/List'
        insert: []
        update: []
        delete: []
        exec: []
    pipeline-stack:
      id: heroku.misc.pipeline-stack
      name: pipeline-stack
      title: Pipeline Stack
      methods:
        DefaultStack:
          operation:
            $ref: '#/paths/~1pipelines~1{pipeline_id}~1pipeline-stack/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/pipeline-stack/methods/DefaultStack'
        insert: []
        update: []
        delete: []
        exec: []
    pipeline-transfer:
      id: heroku.misc.pipeline-transfer
      name: pipeline-transfer
      title: Pipeline Transfer
      methods:
        Create:
          operation:
            $ref: '#/paths/~1pipeline-transfers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select: []
        insert:
        - $ref: '#/components/x-stackQL-resources/pipeline-transfer/methods/Create'
        update: []
        delete: []
        exec: []
    rate-limit:
      id: heroku.misc.rate-limit
      name: rate-limit
      title: Rate Limit
      methods:
        Info:
          operation:
            $ref: '#/paths/~1account~1rate-limits/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/rate-limit/methods/Info'
        insert: []
        update: []
        delete: []
        exec: []
    review-app:
      id: heroku.misc.review-app
      name: review-app
      title: Review App
      methods:
        Create:
          operation:
            $ref: '#/paths/~1review-apps/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        GetReviewApp:
          operation:
            $ref: '#/paths/~1review-apps~1{review_app_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Delete:
          operation:
            $ref: '#/paths/~1review-apps~1{review_app_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        GetReviewAppByAppId:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1review-app/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        List:
          operation:
            $ref: '#/paths/~1pipelines~1{pipeline_id}~1review-apps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/review-app/methods/List'
        insert:
        - $ref: '#/components/x-stackQL-resources/review-app/methods/Create'
        update: []
        delete:
        - $ref: '#/components/x-stackQL-resources/review-app/methods/Delete'
        exec:
        - $ref: '#/components/x-stackQL-resources/review-app/methods/GetReviewApp'
        - $ref: '#/components/x-stackQL-resources/review-app/methods/GetReviewAppByAppId'
    review-app-config:
      id: heroku.misc.review-app-config
      name: review-app-config
      title: Review App Config
      methods:
        Enable:
          operation:
            $ref: '#/paths/~1pipelines~1{pipeline_id}~1review-app-config/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Info:
          operation:
            $ref: '#/paths/~1pipelines~1{pipeline_id}~1review-app-config/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Update:
          operation:
            $ref: '#/paths/~1pipelines~1{pipeline_id}~1review-app-config/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Delete:
          operation:
            $ref: '#/paths/~1pipelines~1{pipeline_id}~1review-app-config/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/review-app-config/methods/Info'
        insert:
        - $ref: '#/components/x-stackQL-resources/review-app-config/methods/Enable'
        update:
        - $ref: '#/components/x-stackQL-resources/review-app-config/methods/Update'
        delete:
        - $ref: '#/components/x-stackQL-resources/review-app-config/methods/Delete'
        exec: []
    sms-number:
      id: heroku.misc.sms-number
      name: sms-number
      title: Sms Number
      methods:
        SmsNumber:
          operation:
            $ref: '#/paths/~1users~1{account_identity}~1sms-number/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Recover:
          operation:
            $ref: '#/paths/~1users~1{account_identity}~1sms-number~1actions~1recover/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Confirm:
          operation:
            $ref: '#/paths/~1users~1{account_identity}~1sms-number~1actions~1confirm/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/sms-number/methods/SmsNumber'
        - $ref: '#/components/x-stackQL-resources/sms-number/methods/Recover'
        - $ref: '#/components/x-stackQL-resources/sms-number/methods/Confirm'
        insert: []
        update: []
        delete: []
        exec: []
    source:
      id: heroku.misc.source
      name: source
      title: Source
      methods:
        Create:
          operation:
            $ref: '#/paths/~1sources/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        CreateDeprecated:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1sources/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select: []
        insert:
        - $ref: '#/components/x-stackQL-resources/source/methods/Create'
        - $ref: '#/components/x-stackQL-resources/source/methods/CreateDeprecated'
        update: []
        delete: []
        exec: []
    space-app-access:
      id: heroku.misc.space-app-access
      name: space-app-access
      title: Space App Access
      methods:
        Info:
          operation:
            $ref: '#/paths/~1spaces~1{space_identity}~1members~1{account_identity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Update:
          operation:
            $ref: '#/paths/~1spaces~1{space_identity}~1members~1{account_identity}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        List:
          operation:
            $ref: '#/paths/~1spaces~1{space_identity}~1members/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/space-app-access/methods/Info'
        - $ref: '#/components/x-stackQL-resources/space-app-access/methods/List'
        insert: []
        update:
        - $ref: '#/components/x-stackQL-resources/space-app-access/methods/Update'
        delete: []
        exec: []
    space-nat:
      id: heroku.misc.space-nat
      name: space-nat
      title: Space Nat
      methods:
        Info:
          operation:
            $ref: '#/paths/~1spaces~1{space_identity}~1nat/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/space-nat/methods/Info'
        insert: []
        update: []
        delete: []
        exec: []
    space-topology:
      id: heroku.misc.space-topology
      name: space-topology
      title: Space Topology
      methods:
        Topology:
          operation:
            $ref: '#/paths/~1spaces~1{space_identity}~1topology/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/space-topology/methods/Topology'
        insert: []
        update: []
        delete: []
        exec: []
    space-transfer:
      id: heroku.misc.space-transfer
      name: space-transfer
      title: Space Transfer
      methods:
        Transfer:
          operation:
            $ref: '#/paths/~1spaces~1{space_identity}~1transfer/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
        exec:
        - $ref: '#/components/x-stackQL-resources/space-transfer/methods/Transfer'
    team-add-on:
      id: heroku.misc.team-add-on
      name: team-add-on
      title: Team Add On
      methods:
        ListForTeam:
          operation:
            $ref: '#/paths/~1teams~1{team_identity}~1addons/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/team-add-on/methods/ListForTeam'
        insert: []
        update: []
        delete: []
        exec: []
    team-app-permission:
      id: heroku.misc.team-app-permission
      name: team-app-permission
      title: Team App Permission
      methods:
        List:
          operation:
            $ref: '#/paths/~1teams~1permissions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/team-app-permission/methods/List'
        insert: []
        update: []
        delete: []
        exec: []
    team-daily-usage:
      id: heroku.misc.team-daily-usage
      name: team-daily-usage
      title: Team Daily Usage
      methods:
        Info:
          operation:
            $ref: '#/paths/~1teams~1{team_id}~1usage~1daily/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/team-daily-usage/methods/Info'
        insert: []
        update: []
        delete: []
        exec: []
    team-delinquency:
      id: heroku.misc.team-delinquency
      name: team-delinquency
      title: Team Delinquency
      methods:
        Info:
          operation:
            $ref: '#/paths/~1teams~1{team_identity}~1delinquency/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/team-delinquency/methods/Info'
        insert: []
        update: []
        delete: []
        exec: []
    team-invoice:
      id: heroku.misc.team-invoice
      name: team-invoice
      title: Team Invoice
      methods:
        Info:
          operation:
            $ref: '#/paths/~1teams~1{team_identity}~1invoices~1{team_invoice_identity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        List:
          operation:
            $ref: '#/paths/~1teams~1{team_identity}~1invoices/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/team-invoice/methods/Info'
        - $ref: '#/components/x-stackQL-resources/team-invoice/methods/List'
        insert: []
        update: []
        delete: []
        exec: []
    team-monthly-usage:
      id: heroku.misc.team-monthly-usage
      name: team-monthly-usage
      title: Team Monthly Usage
      methods:
        Info:
          operation:
            $ref: '#/paths/~1teams~1{team_id}~1usage~1monthly/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/team-monthly-usage/methods/Info'
        insert: []
        update: []
        delete: []
        exec: []
    team-preferences:
      id: heroku.misc.team-preferences
      name: team-preferences
      title: Team Preferences
      methods:
        List:
          operation:
            $ref: '#/paths/~1teams~1{team_preferences_identity}~1preferences/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Update:
          operation:
            $ref: '#/paths/~1teams~1{team_preferences_identity}~1preferences/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/team-preferences/methods/List'
        insert: []
        update:
        - $ref: '#/components/x-stackQL-resources/team-preferences/methods/Update'
        delete: []
        exec: []
    team-space:
      id: heroku.misc.team-space
      name: team-space
      title: Team Space
      methods:
        List:
          operation:
            $ref: '#/paths/~1teams~1{team_identity}~1spaces/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/team-space/methods/List'
        insert: []
        update: []
        delete: []
        exec: []
    telemetry-drain:
      id: heroku.misc.telemetry-drain
      name: telemetry-drain
      title: Telemetry Drain
      methods:
        Create:
          operation:
            $ref: '#/paths/~1telemetry-drains/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ListByApp:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1telemetry-drains/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ListBySpace:
          operation:
            $ref: '#/paths/~1spaces~1{space_identity}~1telemetry-drains/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Update:
          operation:
            $ref: '#/paths/~1telemetry-drains~1{telemetry_drain_identity}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Delete:
          operation:
            $ref: '#/paths/~1telemetry-drains~1{telemetry_drain_identity}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Info:
          operation:
            $ref: '#/paths/~1telemetry-drains~1{telemetry_drain_identity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/telemetry-drain/methods/ListByApp'
        - $ref: '#/components/x-stackQL-resources/telemetry-drain/methods/ListBySpace'
        - $ref: '#/components/x-stackQL-resources/telemetry-drain/methods/Info'
        insert:
        - $ref: '#/components/x-stackQL-resources/telemetry-drain/methods/Create'
        update:
        - $ref: '#/components/x-stackQL-resources/telemetry-drain/methods/Update'
        delete:
        - $ref: '#/components/x-stackQL-resources/telemetry-drain/methods/Delete'
        exec: []
    test-case:
      id: heroku.misc.test-case
      name: test-case
      title: Test Case
      methods:
        List:
          operation:
            $ref: '#/paths/~1test-runs~1{test_run_id}~1test-cases/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/test-case/methods/List'
        insert: []
        update: []
        delete: []
        exec: []
    test-node:
      id: heroku.misc.test-node
      name: test-node
      title: Test Node
      methods:
        List:
          operation:
            $ref: '#/paths/~1test-runs~1{test_run_identity}~1test-nodes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/test-node/methods/List'
        insert: []
        update: []
        delete: []
        exec: []
    test-run:
      id: heroku.misc.test-run
      name: test-run
      title: Test Run
      methods:
        Create:
          operation:
            $ref: '#/paths/~1test-runs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Info:
          operation:
            $ref: '#/paths/~1test-runs~1{test_run_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        List:
          operation:
            $ref: '#/paths/~1pipelines~1{pipeline_id}~1test-runs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        InfoByPipeline:
          operation:
            $ref: '#/paths/~1pipelines~1{pipeline_id}~1test-runs~1{test_run_number}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Update:
          operation:
            $ref: '#/paths/~1test-runs~1{test_run_number}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/test-run/methods/Info'
        - $ref: '#/components/x-stackQL-resources/test-run/methods/List'
        - $ref: '#/components/x-stackQL-resources/test-run/methods/InfoByPipeline'
        - $ref: '#/components/x-stackQL-resources/test-run/methods/Update'
        insert:
        - $ref: '#/components/x-stackQL-resources/test-run/methods/Create'
        update: []
        delete: []
        exec: []
    user-preferences:
      id: heroku.misc.user-preferences
      name: user-preferences
      title: User Preferences
      methods:
        List:
          operation:
            $ref: '#/paths/~1users~1{user_preferences_identity}~1preferences/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Update:
          operation:
            $ref: '#/paths/~1users~1{user_preferences_identity}~1preferences/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/user-preferences/methods/List'
        insert: []
        update:
        - $ref: '#/components/x-stackQL-resources/user-preferences/methods/Update'
        delete: []
        exec: []
security:
- herokuAuth: []
