openapi: 3.0.0
info:
  title: Heroku Platform API - Releases
  description: The platform API empowers developers to automate, extend and combine Heroku with other services.
  version: v0
servers:
- url: https://api.heroku.com
paths:
  /apps/{app_identity}/oci-images/{oci_image_identity}:
    get:
      summary: Info
      description: Info for the OCI images of an app, filtered by identifier.
      operationId: oci_imageInfo
      tags:
      - releases
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      - name: oci_image_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of oci-image.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/oci-image'
                type:
                - array
      x-stackQL-resource: oci-image
      x-stackQL-method: Info
      x-stackQL-verb: select
  /apps/{app_identity}/oci-images:
    post:
      summary: Create
      description: Create an new OCI image of an app
      operationId: oci_imageCreate
      tags:
      - releases
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oci-image'
      x-stackQL-resource: oci-image
      x-stackQL-method: Create
      x-stackQL-verb: insert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                architecture:
                  $ref: '#/components/schemas/architecture'
                base_image_name:
                  $ref: '#/components/schemas/base_image_name'
                base_top_layer:
                  $ref: '#/components/schemas/base_top_layer'
                commit:
                  $ref: '#/components/schemas/commit'
                commit_description:
                  $ref: '#/components/schemas/commit_description'
                image_repo:
                  $ref: '#/components/schemas/image_repo'
                digest:
                  $ref: '#/components/schemas/digest'
                stack:
                  anyOf:
                  - $ref: '#/components/schemas/name'
                    example: cnb
                  - $ref: '#/components/schemas/id'
                process_types:
                  $ref: '#/components/schemas/process_types'
                buildpacks:
                  $ref: '#/components/schemas/buildpacks'
              type:
              - object
  /apps/{app_identity}/releases/{release_identity}:
    get:
      summary: Info
      description: Info for existing release.
      operationId: releaseInfo
      tags:
      - releases
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      - name: release_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of release.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/release'
      x-stackQL-resource: release
      x-stackQL-method: Info
      x-stackQL-verb: select
  /apps/{app_identity}/releases:
    get:
      summary: List
      description: List existing releases.
      operationId: releaseList
      tags:
      - releases
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/release'
                type:
                - array
      x-stackQL-resource: release
      x-stackQL-method: List
      x-stackQL-verb: select
    post:
      summary: Rollback
      description: Rollback to an existing release.
      operationId: releaseRollback
      tags:
      - releases
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/release'
      x-stackQL-resource: release
      x-stackQL-method: Rollback
      x-stackQL-verb: insert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                release:
                  $ref: '#/components/schemas/id'
              required:
              - release
              type:
              - object
  /apps/{app_identity}/slugs/{slug_identity}:
    get:
      summary: Info
      description: Info for existing slug.
      operationId: slugInfo
      tags:
      - releases
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      - name: slug_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of slug.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/slug'
      x-stackQL-resource: slug
      x-stackQL-method: Info
      x-stackQL-verb: select
  /apps/{app_identity}/slugs:
    post:
      summary: Create
      description: Create a new slug. For more information please refer to [Deploying Slugs using the Platform API](https://devcenter.heroku.com/articles/platform-api-deploying-slugs).
      operationId: slugCreate
      tags:
      - releases
      parameters:
      - name: app_identity
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for identity of app.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/slug'
                example:
                  blob:
                    method: PUT
                    url: https://api.heroku.com/slugs/1234.tgz
                  buildpack_provided_description: Ruby/Rack
                  checksum: SHA256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
                  commit: 60883d9e8947a57e04dc9124f25df004866a2051
                  commit_description: fixed a bug with API documentation
                  created_at: '2012-01-01T12:00:00Z'
                  id: 01234567-89ab-cdef-0123-456789abcdef
                  process_types:
                    web: ./bin/web -p $PORT
                  size: 2048
                  stack:
                    id: 01234567-89ab-cdef-0123-456789abcdef
                    name: heroku-18
                  updated_at: '2012-01-01T12:00:00Z'
      x-stackQL-resource: slug
      x-stackQL-method: Create
      x-stackQL-verb: insert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                buildpack_provided_description:
                  $ref: '#/components/schemas/buildpack_provided_description'
                checksum:
                  $ref: '#/components/schemas/checksum'
                commit:
                  $ref: '#/components/schemas/commit'
                commit_description:
                  $ref: '#/components/schemas/commit_description'
                process_types:
                  $ref: '#/components/schemas/process_types'
                stack:
                  $ref: '#/components/schemas/identity'
              required:
              - process_types
              type:
              - object
components:
  schemas:
    oci-image:
      description: An OCI (Open Container Initiative) image is a standardized format for packaging and distributing containerized
        applications, ready to run on the platform.
      type:
      - object
      properties:
        id:
          $ref: '#/components/schemas/id'
        base_image_name:
          $ref: '#/components/schemas/base_image_name'
        base_top_layer:
          $ref: '#/components/schemas/base_top_layer'
        commit:
          $ref: '#/components/schemas/commit'
        commit_description:
          $ref: '#/components/schemas/commit_description'
        image_repo:
          $ref: '#/components/schemas/image_repo'
        digest:
          $ref: '#/components/schemas/digest'
        stack:
          $ref: '#/components/schemas/stack'
        process_types:
          $ref: '#/components/schemas/process_types'
        buildpacks:
          $ref: '#/components/schemas/buildpacks'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        architecture:
          $ref: '#/components/schemas/architecture'
    id:
      description: unique identifier of the OCI image
      format: uuid
      readOnly: true
      type:
      - string
    base_image_name:
      description: name of the image used for the base layers of the OCI image
      readOnly: false
      type:
      - string
    base_top_layer:
      description: the digest of the top most layer of the base image.
      readOnly: false
      type:
      - string
    commit:
      description: 'identification of the code in your version control system (eg: SHA of the git HEAD)'
      readOnly: false
      type:
      - string
    commit_description:
      description: an optional description of the provided commit
      readOnly: false
      type:
      - string
    image_repo:
      description: name of the image registry repository used for storage
      readOnly: false
      type:
      - string
    digest:
      description: unique identifier representing the content of the OCI image
      readOnly: false
      type:
      - string
    stack:
      description: stack associated to the OCI image
      readOnly: false
      properties:
        id:
          $ref: '#/components/schemas/id'
        name:
          $ref: '#/components/schemas/name'
      type:
      - object
    name:
      description: unique name of stack
      readOnly: true
      type:
      - string
    process_types:
      description: process types of the OCI image
      patternProperties:
        ^[-\w]{1,128}$:
          $ref: '#/components/schemas/process_type'
      type:
      - object
    process_type:
      description: process type information such as names and commands
      readOnly: false
      properties:
        name:
          description: name of the process type
          type:
          - string
        display_cmd:
          description: the detailed command used for display purposes
          type:
          - string
        command:
          description: the command that will be executed
          type:
          - string
        working_dir:
          description: working directory
          type:
          - string
        default:
          description: true if it is the default process type
          type:
          - boolean
          - 'null'
      type:
      - object
    buildpacks:
      description: buildpacks of the OCI image
      items:
        $ref: '#/components/schemas/buildpack'
      type:
      - array
    buildpack:
      description: set of executables that inspects app source code and creates a plan to build and run your image
      readOnly: false
      properties:
        id:
          description: identifier of the buildpack
          type:
          - string
        version:
          description: version of the buildpack
          type:
          - string
        homepage:
          description: homepage of the buildpack
          type:
          - string
      type:
      - object
    created_at:
      description: when the OCI image was created
      format: date-time
      readOnly: true
      type:
      - string
    updated_at:
      description: when the OCI image was updated
      format: date-time
      readOnly: true
      type:
      - string
    architecture:
      description: build architecture for OCI image
      readOnly: false
      type:
      - string
      - 'null'
    release:
      description: A release represents a combination of code, config vars and add-ons for an app on Heroku.
      type:
      - object
      properties:
        addon_plan_names:
          description: add-on plans installed on the app for this release
          type:
          - array
          items:
            $ref: '#/components/schemas/name'
        artifacts:
          description: build artifacts for the release
          type:
          - array
          items:
            $ref: '#/components/schemas/artifact'
        app:
          description: app involved in the release
          properties:
            name:
              $ref: '#/components/schemas/name'
            id:
              $ref: '#/components/schemas/id'
          type:
          - object
        created_at:
          $ref: '#/components/schemas/created_at'
        description:
          $ref: '#/components/schemas/description'
        id:
          $ref: '#/components/schemas/id'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        slug:
          description: slug running in this release
          properties:
            id:
              $ref: '#/components/schemas/id'
          type:
          - object
          - 'null'
        status:
          $ref: '#/components/schemas/status'
        user:
          description: user that created the release
          properties:
            id:
              $ref: '#/components/schemas/id'
            email:
              $ref: '#/components/schemas/email'
          type:
          - object
        version:
          $ref: '#/components/schemas/version'
        current:
          $ref: '#/components/schemas/current'
        output_stream_url:
          $ref: '#/components/schemas/output_stream_url'
        eligible_for_rollback:
          $ref: '#/components/schemas/eligible_for_rollback'
    artifact:
      description: a build artifact for the release
      properties:
        type:
          description: type of artifact
          type:
          - string
        id:
          anyOf:
          - $ref: '#/components/schemas/id'
          - $ref: '#/components/schemas/id'
      readOnly: true
      type:
      - object
    description:
      description: description of changes in this release
      readOnly: true
      type:
      - string
    status:
      description: current status of the release
      enum:
      - failed
      - pending
      - succeeded
      readOnly: true
      type:
      - string
    email:
      description: unique email address of account
      format: email
      readOnly: false
      type:
      - string
    version:
      description: unique version assigned to the release
      readOnly: true
      type:
      - integer
    current:
      description: indicates this release as being the current one for the app
      readOnly: true
      type:
      - boolean
    output_stream_url:
      description: Release command output will be available from this URL as a stream. The stream is available as either `text/plain`
        or `text/event-stream`. Clients should be prepared to handle disconnects and can resume the stream by sending a `Range`
        header (for `text/plain`) or a `Last-Event-Id` header (for `text/event-stream`).
      readOnly: true
      type:
      - string
      - 'null'
    eligible_for_rollback:
      description: indicates if this release is eligible for rollback
      readOnly: true
      type:
      - boolean
    slug:
      description: A slug is a snapshot of your application code that is ready to run on the platform.
      type:
      - object
      properties:
        blob:
          description: pointer to the url where clients can fetch or store the actual release binary
          properties:
            method:
              $ref: '#/components/schemas/method'
            url:
              $ref: '#/components/schemas/url'
          type:
          - object
        buildpack_provided_description:
          $ref: '#/components/schemas/buildpack_provided_description'
        checksum:
          $ref: '#/components/schemas/checksum'
        commit:
          $ref: '#/components/schemas/commit'
        commit_description:
          $ref: '#/components/schemas/commit_description'
        created_at:
          $ref: '#/components/schemas/created_at'
        id:
          $ref: '#/components/schemas/id'
        process_types:
          $ref: '#/components/schemas/process_types'
        size:
          $ref: '#/components/schemas/size'
        stack:
          description: identity of slug stack
          properties:
            id:
              $ref: '#/components/schemas/id'
            name:
              $ref: '#/components/schemas/name'
          type:
          - object
        updated_at:
          $ref: '#/components/schemas/updated_at'
    method:
      description: method to be used to interact with the slug blob
      readOnly: true
      type:
      - string
    url:
      description: URL to interact with the slug blob
      readOnly: true
      type:
      - string
    buildpack_provided_description:
      description: description from buildpack of slug
      readOnly: false
      type:
      - 'null'
      - string
    checksum:
      description: an optional checksum of the slug for verifying its integrity
      readOnly: true
      type:
      - 'null'
      - string
    size:
      default: null
      description: size of slug, in bytes
      readOnly: true
      type:
      - integer
      - 'null'
    identity:
      anyOf:
      - $ref: '#/components/schemas/name'
      - $ref: '#/components/schemas/id'
  securitySchemes:
    herokuAuth:
      type: http
      scheme: bearer
      bearerFormat: API Key
  x-stackQL-resources:
    oci-image:
      id: heroku.releases.oci-image
      name: oci-image
      title: Oci Image
      methods:
        Info:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1oci-images~1{oci_image_identity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Create:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1oci-images/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/oci-image/methods/Info'
        insert:
        - $ref: '#/components/x-stackQL-resources/oci-image/methods/Create'
        update: []
        delete: []
        exec: []
    release:
      id: heroku.releases.release
      name: release
      title: Release
      methods:
        Info:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1releases~1{release_identity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        List:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1releases/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Rollback:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1releases/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/release/methods/Info'
        - $ref: '#/components/x-stackQL-resources/release/methods/List'
        insert:
        - $ref: '#/components/x-stackQL-resources/release/methods/Rollback'
        update: []
        delete: []
        exec: []
    slug:
      id: heroku.releases.slug
      name: slug
      title: Slug
      methods:
        Info:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1slugs~1{slug_identity}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Create:
          operation:
            $ref: '#/paths/~1apps~1{app_identity}~1slugs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/slug/methods/Info'
        insert:
        - $ref: '#/components/x-stackQL-resources/slug/methods/Create'
        update: []
        delete: []
        exec: []
security:
- herokuAuth: []
